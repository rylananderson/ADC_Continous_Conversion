
9_adc_single_conversion.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001364  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  08001534  08001534  00011534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015e0  080015e0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015e0  080015e0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015e0  080015e0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015e0  080015e0  000115e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015e4  080015e4  000115e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015e8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000003c  20000064  0800164c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000a0  0800164c  000200a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002e6d  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000008c1  00000000  00000000  00022f01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000190  00000000  00000000  000237c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000138  00000000  00000000  00023958  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a92f  00000000  00000000  00023a90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000202f  00000000  00000000  0003e3bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090698  00000000  00000000  000403ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000d0a86  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c88  00000000  00000000  000d0adc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800151c 	.word	0x0800151c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	0800151c 	.word	0x0800151c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <pa1_adc_init>:


//********************************************************************

void pa1_adc_init(void)
{
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
	//*****Configure ADC GPIO pin*****

	// Enable clock access to ADC Pin Port (PA1)
	RCC->AHB1ENR |= GPIOAEN;
 80002b4:	4b14      	ldr	r3, [pc, #80]	; (8000308 <pa1_adc_init+0x58>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a13      	ldr	r2, [pc, #76]	; (8000308 <pa1_adc_init+0x58>)
 80002ba:	f043 0301 	orr.w	r3, r3, #1
 80002be:	6313      	str	r3, [r2, #48]	; 0x30

	// Set mode of PA1 to analog mode
	GPIOA->MODER |= (1U<<2);
 80002c0:	4b12      	ldr	r3, [pc, #72]	; (800030c <pa1_adc_init+0x5c>)
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	4a11      	ldr	r2, [pc, #68]	; (800030c <pa1_adc_init+0x5c>)
 80002c6:	f043 0304 	orr.w	r3, r3, #4
 80002ca:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);
 80002cc:	4b0f      	ldr	r3, [pc, #60]	; (800030c <pa1_adc_init+0x5c>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	4a0e      	ldr	r2, [pc, #56]	; (800030c <pa1_adc_init+0x5c>)
 80002d2:	f043 0308 	orr.w	r3, r3, #8
 80002d6:	6013      	str	r3, [r2, #0]

	//*****Configure ADC Peripheral*****

	// Enable clock access to ADC module
	RCC->APB2ENR |= ADC1EN;
 80002d8:	4b0b      	ldr	r3, [pc, #44]	; (8000308 <pa1_adc_init+0x58>)
 80002da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002dc:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <pa1_adc_init+0x58>)
 80002de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002e2:	6453      	str	r3, [r2, #68]	; 0x44

	// Conversion sequence start
	ADC1->SQR3 = ADC_CH1;
 80002e4:	4b0a      	ldr	r3, [pc, #40]	; (8000310 <pa1_adc_init+0x60>)
 80002e6:	2201      	movs	r2, #1
 80002e8:	635a      	str	r2, [r3, #52]	; 0x34

	// Conversion sequence length
	ADC1->SQR1 = ADC_SEQ_LEN_1;
 80002ea:	4b09      	ldr	r3, [pc, #36]	; (8000310 <pa1_adc_init+0x60>)
 80002ec:	2200      	movs	r2, #0
 80002ee:	62da      	str	r2, [r3, #44]	; 0x2c

	// Enable ADC Module
	ADC1->CR2 |= CR2_ADON;
 80002f0:	4b07      	ldr	r3, [pc, #28]	; (8000310 <pa1_adc_init+0x60>)
 80002f2:	689b      	ldr	r3, [r3, #8]
 80002f4:	4a06      	ldr	r2, [pc, #24]	; (8000310 <pa1_adc_init+0x60>)
 80002f6:	f043 0301 	orr.w	r3, r3, #1
 80002fa:	6093      	str	r3, [r2, #8]

}
 80002fc:	bf00      	nop
 80002fe:	46bd      	mov	sp, r7
 8000300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000304:	4770      	bx	lr
 8000306:	bf00      	nop
 8000308:	40023800 	.word	0x40023800
 800030c:	40020000 	.word	0x40020000
 8000310:	40012000 	.word	0x40012000

08000314 <start_conversion>:

//********************************************************************

void start_conversion(void)
{
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
	// start ADC conversion
	ADC1->CR2 |= CR2_SWSTART;
 8000318:	4b05      	ldr	r3, [pc, #20]	; (8000330 <start_conversion+0x1c>)
 800031a:	689b      	ldr	r3, [r3, #8]
 800031c:	4a04      	ldr	r2, [pc, #16]	; (8000330 <start_conversion+0x1c>)
 800031e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000322:	6093      	str	r3, [r2, #8]

}
 8000324:	bf00      	nop
 8000326:	46bd      	mov	sp, r7
 8000328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032c:	4770      	bx	lr
 800032e:	bf00      	nop
 8000330:	40012000 	.word	0x40012000

08000334 <adc_read>:

//********************************************************************

uint32_t adc_read(void)
{
 8000334:	b480      	push	{r7}
 8000336:	af00      	add	r7, sp, #0
	// wait for conversion to be complete

	while(!(ADC1->SR & SR_EOC)){}
 8000338:	bf00      	nop
 800033a:	4b06      	ldr	r3, [pc, #24]	; (8000354 <adc_read+0x20>)
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	f003 0302 	and.w	r3, r3, #2
 8000342:	2b00      	cmp	r3, #0
 8000344:	d0f9      	beq.n	800033a <adc_read+0x6>

	// Read converted result

	return (ADC1->DR);
 8000346:	4b03      	ldr	r3, [pc, #12]	; (8000354 <adc_read+0x20>)
 8000348:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 800034a:	4618      	mov	r0, r3
 800034c:	46bd      	mov	sp, r7
 800034e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000352:	4770      	bx	lr
 8000354:	40012000 	.word	0x40012000

08000358 <main>:


uint32_t sensor_v;

int main(void)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	af00      	add	r7, sp, #0
	uart2_tx_init();
 800035c:	f000 f8b8 	bl	80004d0 <uart2_tx_init>

	pa1_adc_init();
 8000360:	f7ff ffa6 	bl	80002b0 <pa1_adc_init>



	while(1)
	{
		start_conversion();
 8000364:	f7ff ffd6 	bl	8000314 <start_conversion>

		sensor_v = adc_read();
 8000368:	f7ff ffe4 	bl	8000334 <adc_read>
 800036c:	4603      	mov	r3, r0
 800036e:	4a04      	ldr	r2, [pc, #16]	; (8000380 <main+0x28>)
 8000370:	6013      	str	r3, [r2, #0]
		printf("Sensor Value: %d \n\r", (int) sensor_v);
 8000372:	4b03      	ldr	r3, [pc, #12]	; (8000380 <main+0x28>)
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	4619      	mov	r1, r3
 8000378:	4802      	ldr	r0, [pc, #8]	; (8000384 <main+0x2c>)
 800037a:	f000 f979 	bl	8000670 <iprintf>
		start_conversion();
 800037e:	e7f1      	b.n	8000364 <main+0xc>
 8000380:	2000008c 	.word	0x2000008c
 8000384:	08001534 	.word	0x08001534

08000388 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b086      	sub	sp, #24
 800038c:	af00      	add	r7, sp, #0
 800038e:	60f8      	str	r0, [r7, #12]
 8000390:	60b9      	str	r1, [r7, #8]
 8000392:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000394:	2300      	movs	r3, #0
 8000396:	617b      	str	r3, [r7, #20]
 8000398:	e00a      	b.n	80003b0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800039a:	f3af 8000 	nop.w
 800039e:	4601      	mov	r1, r0
 80003a0:	68bb      	ldr	r3, [r7, #8]
 80003a2:	1c5a      	adds	r2, r3, #1
 80003a4:	60ba      	str	r2, [r7, #8]
 80003a6:	b2ca      	uxtb	r2, r1
 80003a8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003aa:	697b      	ldr	r3, [r7, #20]
 80003ac:	3301      	adds	r3, #1
 80003ae:	617b      	str	r3, [r7, #20]
 80003b0:	697a      	ldr	r2, [r7, #20]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	429a      	cmp	r2, r3
 80003b6:	dbf0      	blt.n	800039a <_read+0x12>
	}

return len;
 80003b8:	687b      	ldr	r3, [r7, #4]
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	3718      	adds	r7, #24
 80003be:	46bd      	mov	sp, r7
 80003c0:	bd80      	pop	{r7, pc}

080003c2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003c2:	b580      	push	{r7, lr}
 80003c4:	b086      	sub	sp, #24
 80003c6:	af00      	add	r7, sp, #0
 80003c8:	60f8      	str	r0, [r7, #12]
 80003ca:	60b9      	str	r1, [r7, #8]
 80003cc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ce:	2300      	movs	r3, #0
 80003d0:	617b      	str	r3, [r7, #20]
 80003d2:	e009      	b.n	80003e8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80003d4:	68bb      	ldr	r3, [r7, #8]
 80003d6:	1c5a      	adds	r2, r3, #1
 80003d8:	60ba      	str	r2, [r7, #8]
 80003da:	781b      	ldrb	r3, [r3, #0]
 80003dc:	4618      	mov	r0, r3
 80003de:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	3301      	adds	r3, #1
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	697a      	ldr	r2, [r7, #20]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	dbf1      	blt.n	80003d4 <_write+0x12>
	}
	return len;
 80003f0:	687b      	ldr	r3, [r7, #4]
}
 80003f2:	4618      	mov	r0, r3
 80003f4:	3718      	adds	r7, #24
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bd80      	pop	{r7, pc}

080003fa <_close>:

int _close(int file)
{
 80003fa:	b480      	push	{r7}
 80003fc:	b083      	sub	sp, #12
 80003fe:	af00      	add	r7, sp, #0
 8000400:	6078      	str	r0, [r7, #4]
	return -1;
 8000402:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000406:	4618      	mov	r0, r3
 8000408:	370c      	adds	r7, #12
 800040a:	46bd      	mov	sp, r7
 800040c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000410:	4770      	bx	lr

08000412 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000412:	b480      	push	{r7}
 8000414:	b083      	sub	sp, #12
 8000416:	af00      	add	r7, sp, #0
 8000418:	6078      	str	r0, [r7, #4]
 800041a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800041c:	683b      	ldr	r3, [r7, #0]
 800041e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000422:	605a      	str	r2, [r3, #4]
	return 0;
 8000424:	2300      	movs	r3, #0
}
 8000426:	4618      	mov	r0, r3
 8000428:	370c      	adds	r7, #12
 800042a:	46bd      	mov	sp, r7
 800042c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000430:	4770      	bx	lr

08000432 <_isatty>:

int _isatty(int file)
{
 8000432:	b480      	push	{r7}
 8000434:	b083      	sub	sp, #12
 8000436:	af00      	add	r7, sp, #0
 8000438:	6078      	str	r0, [r7, #4]
	return 1;
 800043a:	2301      	movs	r3, #1
}
 800043c:	4618      	mov	r0, r3
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000446:	4770      	bx	lr

08000448 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000448:	b480      	push	{r7}
 800044a:	b085      	sub	sp, #20
 800044c:	af00      	add	r7, sp, #0
 800044e:	60f8      	str	r0, [r7, #12]
 8000450:	60b9      	str	r1, [r7, #8]
 8000452:	607a      	str	r2, [r7, #4]
	return 0;
 8000454:	2300      	movs	r3, #0
}
 8000456:	4618      	mov	r0, r3
 8000458:	3714      	adds	r7, #20
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
	...

08000464 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000464:	b580      	push	{r7, lr}
 8000466:	b086      	sub	sp, #24
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800046c:	4a14      	ldr	r2, [pc, #80]	; (80004c0 <_sbrk+0x5c>)
 800046e:	4b15      	ldr	r3, [pc, #84]	; (80004c4 <_sbrk+0x60>)
 8000470:	1ad3      	subs	r3, r2, r3
 8000472:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000474:	697b      	ldr	r3, [r7, #20]
 8000476:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000478:	4b13      	ldr	r3, [pc, #76]	; (80004c8 <_sbrk+0x64>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	2b00      	cmp	r3, #0
 800047e:	d102      	bne.n	8000486 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000480:	4b11      	ldr	r3, [pc, #68]	; (80004c8 <_sbrk+0x64>)
 8000482:	4a12      	ldr	r2, [pc, #72]	; (80004cc <_sbrk+0x68>)
 8000484:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000486:	4b10      	ldr	r3, [pc, #64]	; (80004c8 <_sbrk+0x64>)
 8000488:	681a      	ldr	r2, [r3, #0]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	4413      	add	r3, r2
 800048e:	693a      	ldr	r2, [r7, #16]
 8000490:	429a      	cmp	r2, r3
 8000492:	d207      	bcs.n	80004a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000494:	f000 f8ba 	bl	800060c <__errno>
 8000498:	4603      	mov	r3, r0
 800049a:	220c      	movs	r2, #12
 800049c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800049e:	f04f 33ff 	mov.w	r3, #4294967295
 80004a2:	e009      	b.n	80004b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004a4:	4b08      	ldr	r3, [pc, #32]	; (80004c8 <_sbrk+0x64>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004aa:	4b07      	ldr	r3, [pc, #28]	; (80004c8 <_sbrk+0x64>)
 80004ac:	681a      	ldr	r2, [r3, #0]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	4413      	add	r3, r2
 80004b2:	4a05      	ldr	r2, [pc, #20]	; (80004c8 <_sbrk+0x64>)
 80004b4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004b6:	68fb      	ldr	r3, [r7, #12]
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	3718      	adds	r7, #24
 80004bc:	46bd      	mov	sp, r7
 80004be:	bd80      	pop	{r7, pc}
 80004c0:	20020000 	.word	0x20020000
 80004c4:	00000400 	.word	0x00000400
 80004c8:	20000080 	.word	0x20000080
 80004cc:	200000a0 	.word	0x200000a0

080004d0 <uart2_tx_init>:
}

//*******************************************************************

void uart2_tx_init(void)
{
 80004d0:	b580      	push	{r7, lr}
 80004d2:	af00      	add	r7, sp, #0
	/******Configure UART GPIO pin******/
	// Enable clock access to GPIOA
	RCC->AHB1ENR |= GPIOAEN;
 80004d4:	4b20      	ldr	r3, [pc, #128]	; (8000558 <uart2_tx_init+0x88>)
 80004d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d8:	4a1f      	ldr	r2, [pc, #124]	; (8000558 <uart2_tx_init+0x88>)
 80004da:	f043 0301 	orr.w	r3, r3, #1
 80004de:	6313      	str	r3, [r2, #48]	; 0x30

	// Set PA2 mode to alternate function mode
	// Reference manual p.157
	GPIOA->MODER &=~ (1U<<4);
 80004e0:	4b1e      	ldr	r3, [pc, #120]	; (800055c <uart2_tx_init+0x8c>)
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	4a1d      	ldr	r2, [pc, #116]	; (800055c <uart2_tx_init+0x8c>)
 80004e6:	f023 0310 	bic.w	r3, r3, #16
 80004ea:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 80004ec:	4b1b      	ldr	r3, [pc, #108]	; (800055c <uart2_tx_init+0x8c>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a1a      	ldr	r2, [pc, #104]	; (800055c <uart2_tx_init+0x8c>)
 80004f2:	f043 0320 	orr.w	r3, r3, #32
 80004f6:	6013      	str	r3, [r2, #0]

	// Set PA2 alternate function type to UART_TX (AF07)
	// Reference manual p.161
	GPIOA->AFR[0] |= (1U<<8); // set pin 8 to 1
 80004f8:	4b18      	ldr	r3, [pc, #96]	; (800055c <uart2_tx_init+0x8c>)
 80004fa:	6a1b      	ldr	r3, [r3, #32]
 80004fc:	4a17      	ldr	r2, [pc, #92]	; (800055c <uart2_tx_init+0x8c>)
 80004fe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000502:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9); // set pin 9 to 1
 8000504:	4b15      	ldr	r3, [pc, #84]	; (800055c <uart2_tx_init+0x8c>)
 8000506:	6a1b      	ldr	r3, [r3, #32]
 8000508:	4a14      	ldr	r2, [pc, #80]	; (800055c <uart2_tx_init+0x8c>)
 800050a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800050e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10); // set pin 10 to 1
 8000510:	4b12      	ldr	r3, [pc, #72]	; (800055c <uart2_tx_init+0x8c>)
 8000512:	6a1b      	ldr	r3, [r3, #32]
 8000514:	4a11      	ldr	r2, [pc, #68]	; (800055c <uart2_tx_init+0x8c>)
 8000516:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800051a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~ (1U<<11); //set pin 11 to 0
 800051c:	4b0f      	ldr	r3, [pc, #60]	; (800055c <uart2_tx_init+0x8c>)
 800051e:	6a1b      	ldr	r3, [r3, #32]
 8000520:	4a0e      	ldr	r2, [pc, #56]	; (800055c <uart2_tx_init+0x8c>)
 8000522:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000526:	6213      	str	r3, [r2, #32]


	/******Configure USART Module******/
	// Enable clock access to UART2
	// Connected to the APB1 Bus, Data sheet p. 15
	RCC->APB1ENR |= UART2EN;
 8000528:	4b0b      	ldr	r3, [pc, #44]	; (8000558 <uart2_tx_init+0x88>)
 800052a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800052c:	4a0a      	ldr	r2, [pc, #40]	; (8000558 <uart2_tx_init+0x88>)
 800052e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000532:	6413      	str	r3, [r2, #64]	; 0x40

	// Configure UART BAUDRATE
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 8000534:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000538:	4909      	ldr	r1, [pc, #36]	; (8000560 <uart2_tx_init+0x90>)
 800053a:	480a      	ldr	r0, [pc, #40]	; (8000564 <uart2_tx_init+0x94>)
 800053c:	f000 f814 	bl	8000568 <uart_set_baudrate>

	// Configure the transfer direction
	// Reference manual p. 550 set bit number 3 to 1 to enable transmitter
	USART2->CR1 = CR1_TE; // cleans out the register when use =
 8000540:	4b08      	ldr	r3, [pc, #32]	; (8000564 <uart2_tx_init+0x94>)
 8000542:	2208      	movs	r2, #8
 8000544:	60da      	str	r2, [r3, #12]


	// Enable the UART Module
	USART2->CR1 |= CR1_UE; // do not want to clean out register this time
 8000546:	4b07      	ldr	r3, [pc, #28]	; (8000564 <uart2_tx_init+0x94>)
 8000548:	68db      	ldr	r3, [r3, #12]
 800054a:	4a06      	ldr	r2, [pc, #24]	; (8000564 <uart2_tx_init+0x94>)
 800054c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000550:	60d3      	str	r3, [r2, #12]

}
 8000552:	bf00      	nop
 8000554:	bd80      	pop	{r7, pc}
 8000556:	bf00      	nop
 8000558:	40023800 	.word	0x40023800
 800055c:	40020000 	.word	0x40020000
 8000560:	00f42400 	.word	0x00f42400
 8000564:	40004400 	.word	0x40004400

08000568 <uart_set_baudrate>:
}

//*******************************************************************

static void uart_set_baudrate(USART_TypeDef* USARTx, uint32_t periphClk,uint32_t baudRate)
{
 8000568:	b580      	push	{r7, lr}
 800056a:	b084      	sub	sp, #16
 800056c:	af00      	add	r7, sp, #0
 800056e:	60f8      	str	r0, [r7, #12]
 8000570:	60b9      	str	r1, [r7, #8]
 8000572:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(periphClk, baudRate);
 8000574:	6879      	ldr	r1, [r7, #4]
 8000576:	68b8      	ldr	r0, [r7, #8]
 8000578:	f000 f808 	bl	800058c <compute_uart_bd>
 800057c:	4603      	mov	r3, r0
 800057e:	461a      	mov	r2, r3
 8000580:	68fb      	ldr	r3, [r7, #12]
 8000582:	609a      	str	r2, [r3, #8]

}
 8000584:	bf00      	nop
 8000586:	3710      	adds	r7, #16
 8000588:	46bd      	mov	sp, r7
 800058a:	bd80      	pop	{r7, pc}

0800058c <compute_uart_bd>:

//*******************************************************************

static uint16_t compute_uart_bd(uint32_t periphClk, uint32_t baudRate)
{
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
 8000594:	6039      	str	r1, [r7, #0]
	return (periphClk + (baudRate/2U)/baudRate);
 8000596:	683b      	ldr	r3, [r7, #0]
 8000598:	085a      	lsrs	r2, r3, #1
 800059a:	683b      	ldr	r3, [r7, #0]
 800059c:	fbb2 f3f3 	udiv	r3, r2, r3
 80005a0:	b29a      	uxth	r2, r3
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	b29b      	uxth	r3, r3
 80005a6:	4413      	add	r3, r2
 80005a8:	b29b      	uxth	r3, r3
}
 80005aa:	4618      	mov	r0, r3
 80005ac:	370c      	adds	r7, #12
 80005ae:	46bd      	mov	sp, r7
 80005b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b4:	4770      	bx	lr
	...

080005b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005b8:	480d      	ldr	r0, [pc, #52]	; (80005f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ba:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005c0:	480c      	ldr	r0, [pc, #48]	; (80005f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80005c2:	490d      	ldr	r1, [pc, #52]	; (80005f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005c4:	4a0d      	ldr	r2, [pc, #52]	; (80005fc <LoopForever+0xe>)
  movs r3, #0
 80005c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005c8:	e002      	b.n	80005d0 <LoopCopyDataInit>

080005ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ce:	3304      	adds	r3, #4

080005d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005d4:	d3f9      	bcc.n	80005ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005d6:	4a0a      	ldr	r2, [pc, #40]	; (8000600 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005d8:	4c0a      	ldr	r4, [pc, #40]	; (8000604 <LoopForever+0x16>)
  movs r3, #0
 80005da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005dc:	e001      	b.n	80005e2 <LoopFillZerobss>

080005de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005e0:	3204      	adds	r2, #4

080005e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005e4:	d3fb      	bcc.n	80005de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005e6:	f000 f817 	bl	8000618 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ea:	f7ff feb5 	bl	8000358 <main>

080005ee <LoopForever>:

LoopForever:
    b LoopForever
 80005ee:	e7fe      	b.n	80005ee <LoopForever>
  ldr   r0, =_estack
 80005f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005f8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005fc:	080015e8 	.word	0x080015e8
  ldr r2, =_sbss
 8000600:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000604:	200000a0 	.word	0x200000a0

08000608 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000608:	e7fe      	b.n	8000608 <ADC_IRQHandler>
	...

0800060c <__errno>:
 800060c:	4b01      	ldr	r3, [pc, #4]	; (8000614 <__errno+0x8>)
 800060e:	6818      	ldr	r0, [r3, #0]
 8000610:	4770      	bx	lr
 8000612:	bf00      	nop
 8000614:	20000000 	.word	0x20000000

08000618 <__libc_init_array>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	4d0d      	ldr	r5, [pc, #52]	; (8000650 <__libc_init_array+0x38>)
 800061c:	4c0d      	ldr	r4, [pc, #52]	; (8000654 <__libc_init_array+0x3c>)
 800061e:	1b64      	subs	r4, r4, r5
 8000620:	10a4      	asrs	r4, r4, #2
 8000622:	2600      	movs	r6, #0
 8000624:	42a6      	cmp	r6, r4
 8000626:	d109      	bne.n	800063c <__libc_init_array+0x24>
 8000628:	4d0b      	ldr	r5, [pc, #44]	; (8000658 <__libc_init_array+0x40>)
 800062a:	4c0c      	ldr	r4, [pc, #48]	; (800065c <__libc_init_array+0x44>)
 800062c:	f000 ff76 	bl	800151c <_init>
 8000630:	1b64      	subs	r4, r4, r5
 8000632:	10a4      	asrs	r4, r4, #2
 8000634:	2600      	movs	r6, #0
 8000636:	42a6      	cmp	r6, r4
 8000638:	d105      	bne.n	8000646 <__libc_init_array+0x2e>
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000640:	4798      	blx	r3
 8000642:	3601      	adds	r6, #1
 8000644:	e7ee      	b.n	8000624 <__libc_init_array+0xc>
 8000646:	f855 3b04 	ldr.w	r3, [r5], #4
 800064a:	4798      	blx	r3
 800064c:	3601      	adds	r6, #1
 800064e:	e7f2      	b.n	8000636 <__libc_init_array+0x1e>
 8000650:	080015e0 	.word	0x080015e0
 8000654:	080015e0 	.word	0x080015e0
 8000658:	080015e0 	.word	0x080015e0
 800065c:	080015e4 	.word	0x080015e4

08000660 <memset>:
 8000660:	4402      	add	r2, r0
 8000662:	4603      	mov	r3, r0
 8000664:	4293      	cmp	r3, r2
 8000666:	d100      	bne.n	800066a <memset+0xa>
 8000668:	4770      	bx	lr
 800066a:	f803 1b01 	strb.w	r1, [r3], #1
 800066e:	e7f9      	b.n	8000664 <memset+0x4>

08000670 <iprintf>:
 8000670:	b40f      	push	{r0, r1, r2, r3}
 8000672:	4b0a      	ldr	r3, [pc, #40]	; (800069c <iprintf+0x2c>)
 8000674:	b513      	push	{r0, r1, r4, lr}
 8000676:	681c      	ldr	r4, [r3, #0]
 8000678:	b124      	cbz	r4, 8000684 <iprintf+0x14>
 800067a:	69a3      	ldr	r3, [r4, #24]
 800067c:	b913      	cbnz	r3, 8000684 <iprintf+0x14>
 800067e:	4620      	mov	r0, r4
 8000680:	f000 f866 	bl	8000750 <__sinit>
 8000684:	ab05      	add	r3, sp, #20
 8000686:	9a04      	ldr	r2, [sp, #16]
 8000688:	68a1      	ldr	r1, [r4, #8]
 800068a:	9301      	str	r3, [sp, #4]
 800068c:	4620      	mov	r0, r4
 800068e:	f000 f983 	bl	8000998 <_vfiprintf_r>
 8000692:	b002      	add	sp, #8
 8000694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000698:	b004      	add	sp, #16
 800069a:	4770      	bx	lr
 800069c:	20000000 	.word	0x20000000

080006a0 <std>:
 80006a0:	2300      	movs	r3, #0
 80006a2:	b510      	push	{r4, lr}
 80006a4:	4604      	mov	r4, r0
 80006a6:	e9c0 3300 	strd	r3, r3, [r0]
 80006aa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006ae:	6083      	str	r3, [r0, #8]
 80006b0:	8181      	strh	r1, [r0, #12]
 80006b2:	6643      	str	r3, [r0, #100]	; 0x64
 80006b4:	81c2      	strh	r2, [r0, #14]
 80006b6:	6183      	str	r3, [r0, #24]
 80006b8:	4619      	mov	r1, r3
 80006ba:	2208      	movs	r2, #8
 80006bc:	305c      	adds	r0, #92	; 0x5c
 80006be:	f7ff ffcf 	bl	8000660 <memset>
 80006c2:	4b05      	ldr	r3, [pc, #20]	; (80006d8 <std+0x38>)
 80006c4:	6263      	str	r3, [r4, #36]	; 0x24
 80006c6:	4b05      	ldr	r3, [pc, #20]	; (80006dc <std+0x3c>)
 80006c8:	62a3      	str	r3, [r4, #40]	; 0x28
 80006ca:	4b05      	ldr	r3, [pc, #20]	; (80006e0 <std+0x40>)
 80006cc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006ce:	4b05      	ldr	r3, [pc, #20]	; (80006e4 <std+0x44>)
 80006d0:	6224      	str	r4, [r4, #32]
 80006d2:	6323      	str	r3, [r4, #48]	; 0x30
 80006d4:	bd10      	pop	{r4, pc}
 80006d6:	bf00      	nop
 80006d8:	08000f41 	.word	0x08000f41
 80006dc:	08000f63 	.word	0x08000f63
 80006e0:	08000f9b 	.word	0x08000f9b
 80006e4:	08000fbf 	.word	0x08000fbf

080006e8 <_cleanup_r>:
 80006e8:	4901      	ldr	r1, [pc, #4]	; (80006f0 <_cleanup_r+0x8>)
 80006ea:	f000 b8af 	b.w	800084c <_fwalk_reent>
 80006ee:	bf00      	nop
 80006f0:	08001299 	.word	0x08001299

080006f4 <__sfmoreglue>:
 80006f4:	b570      	push	{r4, r5, r6, lr}
 80006f6:	1e4a      	subs	r2, r1, #1
 80006f8:	2568      	movs	r5, #104	; 0x68
 80006fa:	4355      	muls	r5, r2
 80006fc:	460e      	mov	r6, r1
 80006fe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000702:	f000 f8c5 	bl	8000890 <_malloc_r>
 8000706:	4604      	mov	r4, r0
 8000708:	b140      	cbz	r0, 800071c <__sfmoreglue+0x28>
 800070a:	2100      	movs	r1, #0
 800070c:	e9c0 1600 	strd	r1, r6, [r0]
 8000710:	300c      	adds	r0, #12
 8000712:	60a0      	str	r0, [r4, #8]
 8000714:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000718:	f7ff ffa2 	bl	8000660 <memset>
 800071c:	4620      	mov	r0, r4
 800071e:	bd70      	pop	{r4, r5, r6, pc}

08000720 <__sfp_lock_acquire>:
 8000720:	4801      	ldr	r0, [pc, #4]	; (8000728 <__sfp_lock_acquire+0x8>)
 8000722:	f000 b8b3 	b.w	800088c <__retarget_lock_acquire_recursive>
 8000726:	bf00      	nop
 8000728:	20000098 	.word	0x20000098

0800072c <__sfp_lock_release>:
 800072c:	4801      	ldr	r0, [pc, #4]	; (8000734 <__sfp_lock_release+0x8>)
 800072e:	f000 b8ae 	b.w	800088e <__retarget_lock_release_recursive>
 8000732:	bf00      	nop
 8000734:	20000098 	.word	0x20000098

08000738 <__sinit_lock_acquire>:
 8000738:	4801      	ldr	r0, [pc, #4]	; (8000740 <__sinit_lock_acquire+0x8>)
 800073a:	f000 b8a7 	b.w	800088c <__retarget_lock_acquire_recursive>
 800073e:	bf00      	nop
 8000740:	20000093 	.word	0x20000093

08000744 <__sinit_lock_release>:
 8000744:	4801      	ldr	r0, [pc, #4]	; (800074c <__sinit_lock_release+0x8>)
 8000746:	f000 b8a2 	b.w	800088e <__retarget_lock_release_recursive>
 800074a:	bf00      	nop
 800074c:	20000093 	.word	0x20000093

08000750 <__sinit>:
 8000750:	b510      	push	{r4, lr}
 8000752:	4604      	mov	r4, r0
 8000754:	f7ff fff0 	bl	8000738 <__sinit_lock_acquire>
 8000758:	69a3      	ldr	r3, [r4, #24]
 800075a:	b11b      	cbz	r3, 8000764 <__sinit+0x14>
 800075c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000760:	f7ff bff0 	b.w	8000744 <__sinit_lock_release>
 8000764:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000768:	6523      	str	r3, [r4, #80]	; 0x50
 800076a:	4b13      	ldr	r3, [pc, #76]	; (80007b8 <__sinit+0x68>)
 800076c:	4a13      	ldr	r2, [pc, #76]	; (80007bc <__sinit+0x6c>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	62a2      	str	r2, [r4, #40]	; 0x28
 8000772:	42a3      	cmp	r3, r4
 8000774:	bf04      	itt	eq
 8000776:	2301      	moveq	r3, #1
 8000778:	61a3      	streq	r3, [r4, #24]
 800077a:	4620      	mov	r0, r4
 800077c:	f000 f820 	bl	80007c0 <__sfp>
 8000780:	6060      	str	r0, [r4, #4]
 8000782:	4620      	mov	r0, r4
 8000784:	f000 f81c 	bl	80007c0 <__sfp>
 8000788:	60a0      	str	r0, [r4, #8]
 800078a:	4620      	mov	r0, r4
 800078c:	f000 f818 	bl	80007c0 <__sfp>
 8000790:	2200      	movs	r2, #0
 8000792:	60e0      	str	r0, [r4, #12]
 8000794:	2104      	movs	r1, #4
 8000796:	6860      	ldr	r0, [r4, #4]
 8000798:	f7ff ff82 	bl	80006a0 <std>
 800079c:	68a0      	ldr	r0, [r4, #8]
 800079e:	2201      	movs	r2, #1
 80007a0:	2109      	movs	r1, #9
 80007a2:	f7ff ff7d 	bl	80006a0 <std>
 80007a6:	68e0      	ldr	r0, [r4, #12]
 80007a8:	2202      	movs	r2, #2
 80007aa:	2112      	movs	r1, #18
 80007ac:	f7ff ff78 	bl	80006a0 <std>
 80007b0:	2301      	movs	r3, #1
 80007b2:	61a3      	str	r3, [r4, #24]
 80007b4:	e7d2      	b.n	800075c <__sinit+0xc>
 80007b6:	bf00      	nop
 80007b8:	08001548 	.word	0x08001548
 80007bc:	080006e9 	.word	0x080006e9

080007c0 <__sfp>:
 80007c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007c2:	4607      	mov	r7, r0
 80007c4:	f7ff ffac 	bl	8000720 <__sfp_lock_acquire>
 80007c8:	4b1e      	ldr	r3, [pc, #120]	; (8000844 <__sfp+0x84>)
 80007ca:	681e      	ldr	r6, [r3, #0]
 80007cc:	69b3      	ldr	r3, [r6, #24]
 80007ce:	b913      	cbnz	r3, 80007d6 <__sfp+0x16>
 80007d0:	4630      	mov	r0, r6
 80007d2:	f7ff ffbd 	bl	8000750 <__sinit>
 80007d6:	3648      	adds	r6, #72	; 0x48
 80007d8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80007dc:	3b01      	subs	r3, #1
 80007de:	d503      	bpl.n	80007e8 <__sfp+0x28>
 80007e0:	6833      	ldr	r3, [r6, #0]
 80007e2:	b30b      	cbz	r3, 8000828 <__sfp+0x68>
 80007e4:	6836      	ldr	r6, [r6, #0]
 80007e6:	e7f7      	b.n	80007d8 <__sfp+0x18>
 80007e8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80007ec:	b9d5      	cbnz	r5, 8000824 <__sfp+0x64>
 80007ee:	4b16      	ldr	r3, [pc, #88]	; (8000848 <__sfp+0x88>)
 80007f0:	60e3      	str	r3, [r4, #12]
 80007f2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80007f6:	6665      	str	r5, [r4, #100]	; 0x64
 80007f8:	f000 f847 	bl	800088a <__retarget_lock_init_recursive>
 80007fc:	f7ff ff96 	bl	800072c <__sfp_lock_release>
 8000800:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000804:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000808:	6025      	str	r5, [r4, #0]
 800080a:	61a5      	str	r5, [r4, #24]
 800080c:	2208      	movs	r2, #8
 800080e:	4629      	mov	r1, r5
 8000810:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000814:	f7ff ff24 	bl	8000660 <memset>
 8000818:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800081c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000820:	4620      	mov	r0, r4
 8000822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000824:	3468      	adds	r4, #104	; 0x68
 8000826:	e7d9      	b.n	80007dc <__sfp+0x1c>
 8000828:	2104      	movs	r1, #4
 800082a:	4638      	mov	r0, r7
 800082c:	f7ff ff62 	bl	80006f4 <__sfmoreglue>
 8000830:	4604      	mov	r4, r0
 8000832:	6030      	str	r0, [r6, #0]
 8000834:	2800      	cmp	r0, #0
 8000836:	d1d5      	bne.n	80007e4 <__sfp+0x24>
 8000838:	f7ff ff78 	bl	800072c <__sfp_lock_release>
 800083c:	230c      	movs	r3, #12
 800083e:	603b      	str	r3, [r7, #0]
 8000840:	e7ee      	b.n	8000820 <__sfp+0x60>
 8000842:	bf00      	nop
 8000844:	08001548 	.word	0x08001548
 8000848:	ffff0001 	.word	0xffff0001

0800084c <_fwalk_reent>:
 800084c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000850:	4606      	mov	r6, r0
 8000852:	4688      	mov	r8, r1
 8000854:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000858:	2700      	movs	r7, #0
 800085a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800085e:	f1b9 0901 	subs.w	r9, r9, #1
 8000862:	d505      	bpl.n	8000870 <_fwalk_reent+0x24>
 8000864:	6824      	ldr	r4, [r4, #0]
 8000866:	2c00      	cmp	r4, #0
 8000868:	d1f7      	bne.n	800085a <_fwalk_reent+0xe>
 800086a:	4638      	mov	r0, r7
 800086c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000870:	89ab      	ldrh	r3, [r5, #12]
 8000872:	2b01      	cmp	r3, #1
 8000874:	d907      	bls.n	8000886 <_fwalk_reent+0x3a>
 8000876:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800087a:	3301      	adds	r3, #1
 800087c:	d003      	beq.n	8000886 <_fwalk_reent+0x3a>
 800087e:	4629      	mov	r1, r5
 8000880:	4630      	mov	r0, r6
 8000882:	47c0      	blx	r8
 8000884:	4307      	orrs	r7, r0
 8000886:	3568      	adds	r5, #104	; 0x68
 8000888:	e7e9      	b.n	800085e <_fwalk_reent+0x12>

0800088a <__retarget_lock_init_recursive>:
 800088a:	4770      	bx	lr

0800088c <__retarget_lock_acquire_recursive>:
 800088c:	4770      	bx	lr

0800088e <__retarget_lock_release_recursive>:
 800088e:	4770      	bx	lr

08000890 <_malloc_r>:
 8000890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000892:	1ccd      	adds	r5, r1, #3
 8000894:	f025 0503 	bic.w	r5, r5, #3
 8000898:	3508      	adds	r5, #8
 800089a:	2d0c      	cmp	r5, #12
 800089c:	bf38      	it	cc
 800089e:	250c      	movcc	r5, #12
 80008a0:	2d00      	cmp	r5, #0
 80008a2:	4606      	mov	r6, r0
 80008a4:	db01      	blt.n	80008aa <_malloc_r+0x1a>
 80008a6:	42a9      	cmp	r1, r5
 80008a8:	d903      	bls.n	80008b2 <_malloc_r+0x22>
 80008aa:	230c      	movs	r3, #12
 80008ac:	6033      	str	r3, [r6, #0]
 80008ae:	2000      	movs	r0, #0
 80008b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008b2:	f000 fda3 	bl	80013fc <__malloc_lock>
 80008b6:	4921      	ldr	r1, [pc, #132]	; (800093c <_malloc_r+0xac>)
 80008b8:	680a      	ldr	r2, [r1, #0]
 80008ba:	4614      	mov	r4, r2
 80008bc:	b99c      	cbnz	r4, 80008e6 <_malloc_r+0x56>
 80008be:	4f20      	ldr	r7, [pc, #128]	; (8000940 <_malloc_r+0xb0>)
 80008c0:	683b      	ldr	r3, [r7, #0]
 80008c2:	b923      	cbnz	r3, 80008ce <_malloc_r+0x3e>
 80008c4:	4621      	mov	r1, r4
 80008c6:	4630      	mov	r0, r6
 80008c8:	f000 fb2a 	bl	8000f20 <_sbrk_r>
 80008cc:	6038      	str	r0, [r7, #0]
 80008ce:	4629      	mov	r1, r5
 80008d0:	4630      	mov	r0, r6
 80008d2:	f000 fb25 	bl	8000f20 <_sbrk_r>
 80008d6:	1c43      	adds	r3, r0, #1
 80008d8:	d123      	bne.n	8000922 <_malloc_r+0x92>
 80008da:	230c      	movs	r3, #12
 80008dc:	6033      	str	r3, [r6, #0]
 80008de:	4630      	mov	r0, r6
 80008e0:	f000 fd92 	bl	8001408 <__malloc_unlock>
 80008e4:	e7e3      	b.n	80008ae <_malloc_r+0x1e>
 80008e6:	6823      	ldr	r3, [r4, #0]
 80008e8:	1b5b      	subs	r3, r3, r5
 80008ea:	d417      	bmi.n	800091c <_malloc_r+0x8c>
 80008ec:	2b0b      	cmp	r3, #11
 80008ee:	d903      	bls.n	80008f8 <_malloc_r+0x68>
 80008f0:	6023      	str	r3, [r4, #0]
 80008f2:	441c      	add	r4, r3
 80008f4:	6025      	str	r5, [r4, #0]
 80008f6:	e004      	b.n	8000902 <_malloc_r+0x72>
 80008f8:	6863      	ldr	r3, [r4, #4]
 80008fa:	42a2      	cmp	r2, r4
 80008fc:	bf0c      	ite	eq
 80008fe:	600b      	streq	r3, [r1, #0]
 8000900:	6053      	strne	r3, [r2, #4]
 8000902:	4630      	mov	r0, r6
 8000904:	f000 fd80 	bl	8001408 <__malloc_unlock>
 8000908:	f104 000b 	add.w	r0, r4, #11
 800090c:	1d23      	adds	r3, r4, #4
 800090e:	f020 0007 	bic.w	r0, r0, #7
 8000912:	1ac2      	subs	r2, r0, r3
 8000914:	d0cc      	beq.n	80008b0 <_malloc_r+0x20>
 8000916:	1a1b      	subs	r3, r3, r0
 8000918:	50a3      	str	r3, [r4, r2]
 800091a:	e7c9      	b.n	80008b0 <_malloc_r+0x20>
 800091c:	4622      	mov	r2, r4
 800091e:	6864      	ldr	r4, [r4, #4]
 8000920:	e7cc      	b.n	80008bc <_malloc_r+0x2c>
 8000922:	1cc4      	adds	r4, r0, #3
 8000924:	f024 0403 	bic.w	r4, r4, #3
 8000928:	42a0      	cmp	r0, r4
 800092a:	d0e3      	beq.n	80008f4 <_malloc_r+0x64>
 800092c:	1a21      	subs	r1, r4, r0
 800092e:	4630      	mov	r0, r6
 8000930:	f000 faf6 	bl	8000f20 <_sbrk_r>
 8000934:	3001      	adds	r0, #1
 8000936:	d1dd      	bne.n	80008f4 <_malloc_r+0x64>
 8000938:	e7cf      	b.n	80008da <_malloc_r+0x4a>
 800093a:	bf00      	nop
 800093c:	20000084 	.word	0x20000084
 8000940:	20000088 	.word	0x20000088

08000944 <__sfputc_r>:
 8000944:	6893      	ldr	r3, [r2, #8]
 8000946:	3b01      	subs	r3, #1
 8000948:	2b00      	cmp	r3, #0
 800094a:	b410      	push	{r4}
 800094c:	6093      	str	r3, [r2, #8]
 800094e:	da08      	bge.n	8000962 <__sfputc_r+0x1e>
 8000950:	6994      	ldr	r4, [r2, #24]
 8000952:	42a3      	cmp	r3, r4
 8000954:	db01      	blt.n	800095a <__sfputc_r+0x16>
 8000956:	290a      	cmp	r1, #10
 8000958:	d103      	bne.n	8000962 <__sfputc_r+0x1e>
 800095a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800095e:	f000 bb33 	b.w	8000fc8 <__swbuf_r>
 8000962:	6813      	ldr	r3, [r2, #0]
 8000964:	1c58      	adds	r0, r3, #1
 8000966:	6010      	str	r0, [r2, #0]
 8000968:	7019      	strb	r1, [r3, #0]
 800096a:	4608      	mov	r0, r1
 800096c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000970:	4770      	bx	lr

08000972 <__sfputs_r>:
 8000972:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000974:	4606      	mov	r6, r0
 8000976:	460f      	mov	r7, r1
 8000978:	4614      	mov	r4, r2
 800097a:	18d5      	adds	r5, r2, r3
 800097c:	42ac      	cmp	r4, r5
 800097e:	d101      	bne.n	8000984 <__sfputs_r+0x12>
 8000980:	2000      	movs	r0, #0
 8000982:	e007      	b.n	8000994 <__sfputs_r+0x22>
 8000984:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000988:	463a      	mov	r2, r7
 800098a:	4630      	mov	r0, r6
 800098c:	f7ff ffda 	bl	8000944 <__sfputc_r>
 8000990:	1c43      	adds	r3, r0, #1
 8000992:	d1f3      	bne.n	800097c <__sfputs_r+0xa>
 8000994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000998 <_vfiprintf_r>:
 8000998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800099c:	460d      	mov	r5, r1
 800099e:	b09d      	sub	sp, #116	; 0x74
 80009a0:	4614      	mov	r4, r2
 80009a2:	4698      	mov	r8, r3
 80009a4:	4606      	mov	r6, r0
 80009a6:	b118      	cbz	r0, 80009b0 <_vfiprintf_r+0x18>
 80009a8:	6983      	ldr	r3, [r0, #24]
 80009aa:	b90b      	cbnz	r3, 80009b0 <_vfiprintf_r+0x18>
 80009ac:	f7ff fed0 	bl	8000750 <__sinit>
 80009b0:	4b89      	ldr	r3, [pc, #548]	; (8000bd8 <_vfiprintf_r+0x240>)
 80009b2:	429d      	cmp	r5, r3
 80009b4:	d11b      	bne.n	80009ee <_vfiprintf_r+0x56>
 80009b6:	6875      	ldr	r5, [r6, #4]
 80009b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ba:	07d9      	lsls	r1, r3, #31
 80009bc:	d405      	bmi.n	80009ca <_vfiprintf_r+0x32>
 80009be:	89ab      	ldrh	r3, [r5, #12]
 80009c0:	059a      	lsls	r2, r3, #22
 80009c2:	d402      	bmi.n	80009ca <_vfiprintf_r+0x32>
 80009c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009c6:	f7ff ff61 	bl	800088c <__retarget_lock_acquire_recursive>
 80009ca:	89ab      	ldrh	r3, [r5, #12]
 80009cc:	071b      	lsls	r3, r3, #28
 80009ce:	d501      	bpl.n	80009d4 <_vfiprintf_r+0x3c>
 80009d0:	692b      	ldr	r3, [r5, #16]
 80009d2:	b9eb      	cbnz	r3, 8000a10 <_vfiprintf_r+0x78>
 80009d4:	4629      	mov	r1, r5
 80009d6:	4630      	mov	r0, r6
 80009d8:	f000 fb5a 	bl	8001090 <__swsetup_r>
 80009dc:	b1c0      	cbz	r0, 8000a10 <_vfiprintf_r+0x78>
 80009de:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009e0:	07dc      	lsls	r4, r3, #31
 80009e2:	d50e      	bpl.n	8000a02 <_vfiprintf_r+0x6a>
 80009e4:	f04f 30ff 	mov.w	r0, #4294967295
 80009e8:	b01d      	add	sp, #116	; 0x74
 80009ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009ee:	4b7b      	ldr	r3, [pc, #492]	; (8000bdc <_vfiprintf_r+0x244>)
 80009f0:	429d      	cmp	r5, r3
 80009f2:	d101      	bne.n	80009f8 <_vfiprintf_r+0x60>
 80009f4:	68b5      	ldr	r5, [r6, #8]
 80009f6:	e7df      	b.n	80009b8 <_vfiprintf_r+0x20>
 80009f8:	4b79      	ldr	r3, [pc, #484]	; (8000be0 <_vfiprintf_r+0x248>)
 80009fa:	429d      	cmp	r5, r3
 80009fc:	bf08      	it	eq
 80009fe:	68f5      	ldreq	r5, [r6, #12]
 8000a00:	e7da      	b.n	80009b8 <_vfiprintf_r+0x20>
 8000a02:	89ab      	ldrh	r3, [r5, #12]
 8000a04:	0598      	lsls	r0, r3, #22
 8000a06:	d4ed      	bmi.n	80009e4 <_vfiprintf_r+0x4c>
 8000a08:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a0a:	f7ff ff40 	bl	800088e <__retarget_lock_release_recursive>
 8000a0e:	e7e9      	b.n	80009e4 <_vfiprintf_r+0x4c>
 8000a10:	2300      	movs	r3, #0
 8000a12:	9309      	str	r3, [sp, #36]	; 0x24
 8000a14:	2320      	movs	r3, #32
 8000a16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a1a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a1e:	2330      	movs	r3, #48	; 0x30
 8000a20:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000be4 <_vfiprintf_r+0x24c>
 8000a24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a28:	f04f 0901 	mov.w	r9, #1
 8000a2c:	4623      	mov	r3, r4
 8000a2e:	469a      	mov	sl, r3
 8000a30:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a34:	b10a      	cbz	r2, 8000a3a <_vfiprintf_r+0xa2>
 8000a36:	2a25      	cmp	r2, #37	; 0x25
 8000a38:	d1f9      	bne.n	8000a2e <_vfiprintf_r+0x96>
 8000a3a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a3e:	d00b      	beq.n	8000a58 <_vfiprintf_r+0xc0>
 8000a40:	465b      	mov	r3, fp
 8000a42:	4622      	mov	r2, r4
 8000a44:	4629      	mov	r1, r5
 8000a46:	4630      	mov	r0, r6
 8000a48:	f7ff ff93 	bl	8000972 <__sfputs_r>
 8000a4c:	3001      	adds	r0, #1
 8000a4e:	f000 80aa 	beq.w	8000ba6 <_vfiprintf_r+0x20e>
 8000a52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a54:	445a      	add	r2, fp
 8000a56:	9209      	str	r2, [sp, #36]	; 0x24
 8000a58:	f89a 3000 	ldrb.w	r3, [sl]
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	f000 80a2 	beq.w	8000ba6 <_vfiprintf_r+0x20e>
 8000a62:	2300      	movs	r3, #0
 8000a64:	f04f 32ff 	mov.w	r2, #4294967295
 8000a68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a6c:	f10a 0a01 	add.w	sl, sl, #1
 8000a70:	9304      	str	r3, [sp, #16]
 8000a72:	9307      	str	r3, [sp, #28]
 8000a74:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a78:	931a      	str	r3, [sp, #104]	; 0x68
 8000a7a:	4654      	mov	r4, sl
 8000a7c:	2205      	movs	r2, #5
 8000a7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a82:	4858      	ldr	r0, [pc, #352]	; (8000be4 <_vfiprintf_r+0x24c>)
 8000a84:	f7ff fbc4 	bl	8000210 <memchr>
 8000a88:	9a04      	ldr	r2, [sp, #16]
 8000a8a:	b9d8      	cbnz	r0, 8000ac4 <_vfiprintf_r+0x12c>
 8000a8c:	06d1      	lsls	r1, r2, #27
 8000a8e:	bf44      	itt	mi
 8000a90:	2320      	movmi	r3, #32
 8000a92:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a96:	0713      	lsls	r3, r2, #28
 8000a98:	bf44      	itt	mi
 8000a9a:	232b      	movmi	r3, #43	; 0x2b
 8000a9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000aa0:	f89a 3000 	ldrb.w	r3, [sl]
 8000aa4:	2b2a      	cmp	r3, #42	; 0x2a
 8000aa6:	d015      	beq.n	8000ad4 <_vfiprintf_r+0x13c>
 8000aa8:	9a07      	ldr	r2, [sp, #28]
 8000aaa:	4654      	mov	r4, sl
 8000aac:	2000      	movs	r0, #0
 8000aae:	f04f 0c0a 	mov.w	ip, #10
 8000ab2:	4621      	mov	r1, r4
 8000ab4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ab8:	3b30      	subs	r3, #48	; 0x30
 8000aba:	2b09      	cmp	r3, #9
 8000abc:	d94e      	bls.n	8000b5c <_vfiprintf_r+0x1c4>
 8000abe:	b1b0      	cbz	r0, 8000aee <_vfiprintf_r+0x156>
 8000ac0:	9207      	str	r2, [sp, #28]
 8000ac2:	e014      	b.n	8000aee <_vfiprintf_r+0x156>
 8000ac4:	eba0 0308 	sub.w	r3, r0, r8
 8000ac8:	fa09 f303 	lsl.w	r3, r9, r3
 8000acc:	4313      	orrs	r3, r2
 8000ace:	9304      	str	r3, [sp, #16]
 8000ad0:	46a2      	mov	sl, r4
 8000ad2:	e7d2      	b.n	8000a7a <_vfiprintf_r+0xe2>
 8000ad4:	9b03      	ldr	r3, [sp, #12]
 8000ad6:	1d19      	adds	r1, r3, #4
 8000ad8:	681b      	ldr	r3, [r3, #0]
 8000ada:	9103      	str	r1, [sp, #12]
 8000adc:	2b00      	cmp	r3, #0
 8000ade:	bfbb      	ittet	lt
 8000ae0:	425b      	neglt	r3, r3
 8000ae2:	f042 0202 	orrlt.w	r2, r2, #2
 8000ae6:	9307      	strge	r3, [sp, #28]
 8000ae8:	9307      	strlt	r3, [sp, #28]
 8000aea:	bfb8      	it	lt
 8000aec:	9204      	strlt	r2, [sp, #16]
 8000aee:	7823      	ldrb	r3, [r4, #0]
 8000af0:	2b2e      	cmp	r3, #46	; 0x2e
 8000af2:	d10c      	bne.n	8000b0e <_vfiprintf_r+0x176>
 8000af4:	7863      	ldrb	r3, [r4, #1]
 8000af6:	2b2a      	cmp	r3, #42	; 0x2a
 8000af8:	d135      	bne.n	8000b66 <_vfiprintf_r+0x1ce>
 8000afa:	9b03      	ldr	r3, [sp, #12]
 8000afc:	1d1a      	adds	r2, r3, #4
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	9203      	str	r2, [sp, #12]
 8000b02:	2b00      	cmp	r3, #0
 8000b04:	bfb8      	it	lt
 8000b06:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b0a:	3402      	adds	r4, #2
 8000b0c:	9305      	str	r3, [sp, #20]
 8000b0e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000bf4 <_vfiprintf_r+0x25c>
 8000b12:	7821      	ldrb	r1, [r4, #0]
 8000b14:	2203      	movs	r2, #3
 8000b16:	4650      	mov	r0, sl
 8000b18:	f7ff fb7a 	bl	8000210 <memchr>
 8000b1c:	b140      	cbz	r0, 8000b30 <_vfiprintf_r+0x198>
 8000b1e:	2340      	movs	r3, #64	; 0x40
 8000b20:	eba0 000a 	sub.w	r0, r0, sl
 8000b24:	fa03 f000 	lsl.w	r0, r3, r0
 8000b28:	9b04      	ldr	r3, [sp, #16]
 8000b2a:	4303      	orrs	r3, r0
 8000b2c:	3401      	adds	r4, #1
 8000b2e:	9304      	str	r3, [sp, #16]
 8000b30:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b34:	482c      	ldr	r0, [pc, #176]	; (8000be8 <_vfiprintf_r+0x250>)
 8000b36:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b3a:	2206      	movs	r2, #6
 8000b3c:	f7ff fb68 	bl	8000210 <memchr>
 8000b40:	2800      	cmp	r0, #0
 8000b42:	d03f      	beq.n	8000bc4 <_vfiprintf_r+0x22c>
 8000b44:	4b29      	ldr	r3, [pc, #164]	; (8000bec <_vfiprintf_r+0x254>)
 8000b46:	bb1b      	cbnz	r3, 8000b90 <_vfiprintf_r+0x1f8>
 8000b48:	9b03      	ldr	r3, [sp, #12]
 8000b4a:	3307      	adds	r3, #7
 8000b4c:	f023 0307 	bic.w	r3, r3, #7
 8000b50:	3308      	adds	r3, #8
 8000b52:	9303      	str	r3, [sp, #12]
 8000b54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b56:	443b      	add	r3, r7
 8000b58:	9309      	str	r3, [sp, #36]	; 0x24
 8000b5a:	e767      	b.n	8000a2c <_vfiprintf_r+0x94>
 8000b5c:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b60:	460c      	mov	r4, r1
 8000b62:	2001      	movs	r0, #1
 8000b64:	e7a5      	b.n	8000ab2 <_vfiprintf_r+0x11a>
 8000b66:	2300      	movs	r3, #0
 8000b68:	3401      	adds	r4, #1
 8000b6a:	9305      	str	r3, [sp, #20]
 8000b6c:	4619      	mov	r1, r3
 8000b6e:	f04f 0c0a 	mov.w	ip, #10
 8000b72:	4620      	mov	r0, r4
 8000b74:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b78:	3a30      	subs	r2, #48	; 0x30
 8000b7a:	2a09      	cmp	r2, #9
 8000b7c:	d903      	bls.n	8000b86 <_vfiprintf_r+0x1ee>
 8000b7e:	2b00      	cmp	r3, #0
 8000b80:	d0c5      	beq.n	8000b0e <_vfiprintf_r+0x176>
 8000b82:	9105      	str	r1, [sp, #20]
 8000b84:	e7c3      	b.n	8000b0e <_vfiprintf_r+0x176>
 8000b86:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b8a:	4604      	mov	r4, r0
 8000b8c:	2301      	movs	r3, #1
 8000b8e:	e7f0      	b.n	8000b72 <_vfiprintf_r+0x1da>
 8000b90:	ab03      	add	r3, sp, #12
 8000b92:	9300      	str	r3, [sp, #0]
 8000b94:	462a      	mov	r2, r5
 8000b96:	4b16      	ldr	r3, [pc, #88]	; (8000bf0 <_vfiprintf_r+0x258>)
 8000b98:	a904      	add	r1, sp, #16
 8000b9a:	4630      	mov	r0, r6
 8000b9c:	f3af 8000 	nop.w
 8000ba0:	4607      	mov	r7, r0
 8000ba2:	1c78      	adds	r0, r7, #1
 8000ba4:	d1d6      	bne.n	8000b54 <_vfiprintf_r+0x1bc>
 8000ba6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ba8:	07d9      	lsls	r1, r3, #31
 8000baa:	d405      	bmi.n	8000bb8 <_vfiprintf_r+0x220>
 8000bac:	89ab      	ldrh	r3, [r5, #12]
 8000bae:	059a      	lsls	r2, r3, #22
 8000bb0:	d402      	bmi.n	8000bb8 <_vfiprintf_r+0x220>
 8000bb2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bb4:	f7ff fe6b 	bl	800088e <__retarget_lock_release_recursive>
 8000bb8:	89ab      	ldrh	r3, [r5, #12]
 8000bba:	065b      	lsls	r3, r3, #25
 8000bbc:	f53f af12 	bmi.w	80009e4 <_vfiprintf_r+0x4c>
 8000bc0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bc2:	e711      	b.n	80009e8 <_vfiprintf_r+0x50>
 8000bc4:	ab03      	add	r3, sp, #12
 8000bc6:	9300      	str	r3, [sp, #0]
 8000bc8:	462a      	mov	r2, r5
 8000bca:	4b09      	ldr	r3, [pc, #36]	; (8000bf0 <_vfiprintf_r+0x258>)
 8000bcc:	a904      	add	r1, sp, #16
 8000bce:	4630      	mov	r0, r6
 8000bd0:	f000 f880 	bl	8000cd4 <_printf_i>
 8000bd4:	e7e4      	b.n	8000ba0 <_vfiprintf_r+0x208>
 8000bd6:	bf00      	nop
 8000bd8:	0800156c 	.word	0x0800156c
 8000bdc:	0800158c 	.word	0x0800158c
 8000be0:	0800154c 	.word	0x0800154c
 8000be4:	080015ac 	.word	0x080015ac
 8000be8:	080015b6 	.word	0x080015b6
 8000bec:	00000000 	.word	0x00000000
 8000bf0:	08000973 	.word	0x08000973
 8000bf4:	080015b2 	.word	0x080015b2

08000bf8 <_printf_common>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	4616      	mov	r6, r2
 8000bfe:	4699      	mov	r9, r3
 8000c00:	688a      	ldr	r2, [r1, #8]
 8000c02:	690b      	ldr	r3, [r1, #16]
 8000c04:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c08:	4293      	cmp	r3, r2
 8000c0a:	bfb8      	it	lt
 8000c0c:	4613      	movlt	r3, r2
 8000c0e:	6033      	str	r3, [r6, #0]
 8000c10:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c14:	4607      	mov	r7, r0
 8000c16:	460c      	mov	r4, r1
 8000c18:	b10a      	cbz	r2, 8000c1e <_printf_common+0x26>
 8000c1a:	3301      	adds	r3, #1
 8000c1c:	6033      	str	r3, [r6, #0]
 8000c1e:	6823      	ldr	r3, [r4, #0]
 8000c20:	0699      	lsls	r1, r3, #26
 8000c22:	bf42      	ittt	mi
 8000c24:	6833      	ldrmi	r3, [r6, #0]
 8000c26:	3302      	addmi	r3, #2
 8000c28:	6033      	strmi	r3, [r6, #0]
 8000c2a:	6825      	ldr	r5, [r4, #0]
 8000c2c:	f015 0506 	ands.w	r5, r5, #6
 8000c30:	d106      	bne.n	8000c40 <_printf_common+0x48>
 8000c32:	f104 0a19 	add.w	sl, r4, #25
 8000c36:	68e3      	ldr	r3, [r4, #12]
 8000c38:	6832      	ldr	r2, [r6, #0]
 8000c3a:	1a9b      	subs	r3, r3, r2
 8000c3c:	42ab      	cmp	r3, r5
 8000c3e:	dc26      	bgt.n	8000c8e <_printf_common+0x96>
 8000c40:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c44:	1e13      	subs	r3, r2, #0
 8000c46:	6822      	ldr	r2, [r4, #0]
 8000c48:	bf18      	it	ne
 8000c4a:	2301      	movne	r3, #1
 8000c4c:	0692      	lsls	r2, r2, #26
 8000c4e:	d42b      	bmi.n	8000ca8 <_printf_common+0xb0>
 8000c50:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c54:	4649      	mov	r1, r9
 8000c56:	4638      	mov	r0, r7
 8000c58:	47c0      	blx	r8
 8000c5a:	3001      	adds	r0, #1
 8000c5c:	d01e      	beq.n	8000c9c <_printf_common+0xa4>
 8000c5e:	6823      	ldr	r3, [r4, #0]
 8000c60:	68e5      	ldr	r5, [r4, #12]
 8000c62:	6832      	ldr	r2, [r6, #0]
 8000c64:	f003 0306 	and.w	r3, r3, #6
 8000c68:	2b04      	cmp	r3, #4
 8000c6a:	bf08      	it	eq
 8000c6c:	1aad      	subeq	r5, r5, r2
 8000c6e:	68a3      	ldr	r3, [r4, #8]
 8000c70:	6922      	ldr	r2, [r4, #16]
 8000c72:	bf0c      	ite	eq
 8000c74:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c78:	2500      	movne	r5, #0
 8000c7a:	4293      	cmp	r3, r2
 8000c7c:	bfc4      	itt	gt
 8000c7e:	1a9b      	subgt	r3, r3, r2
 8000c80:	18ed      	addgt	r5, r5, r3
 8000c82:	2600      	movs	r6, #0
 8000c84:	341a      	adds	r4, #26
 8000c86:	42b5      	cmp	r5, r6
 8000c88:	d11a      	bne.n	8000cc0 <_printf_common+0xc8>
 8000c8a:	2000      	movs	r0, #0
 8000c8c:	e008      	b.n	8000ca0 <_printf_common+0xa8>
 8000c8e:	2301      	movs	r3, #1
 8000c90:	4652      	mov	r2, sl
 8000c92:	4649      	mov	r1, r9
 8000c94:	4638      	mov	r0, r7
 8000c96:	47c0      	blx	r8
 8000c98:	3001      	adds	r0, #1
 8000c9a:	d103      	bne.n	8000ca4 <_printf_common+0xac>
 8000c9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca4:	3501      	adds	r5, #1
 8000ca6:	e7c6      	b.n	8000c36 <_printf_common+0x3e>
 8000ca8:	18e1      	adds	r1, r4, r3
 8000caa:	1c5a      	adds	r2, r3, #1
 8000cac:	2030      	movs	r0, #48	; 0x30
 8000cae:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cb2:	4422      	add	r2, r4
 8000cb4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cb8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cbc:	3302      	adds	r3, #2
 8000cbe:	e7c7      	b.n	8000c50 <_printf_common+0x58>
 8000cc0:	2301      	movs	r3, #1
 8000cc2:	4622      	mov	r2, r4
 8000cc4:	4649      	mov	r1, r9
 8000cc6:	4638      	mov	r0, r7
 8000cc8:	47c0      	blx	r8
 8000cca:	3001      	adds	r0, #1
 8000ccc:	d0e6      	beq.n	8000c9c <_printf_common+0xa4>
 8000cce:	3601      	adds	r6, #1
 8000cd0:	e7d9      	b.n	8000c86 <_printf_common+0x8e>
	...

08000cd4 <_printf_i>:
 8000cd4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cd8:	460c      	mov	r4, r1
 8000cda:	4691      	mov	r9, r2
 8000cdc:	7e27      	ldrb	r7, [r4, #24]
 8000cde:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000ce0:	2f78      	cmp	r7, #120	; 0x78
 8000ce2:	4680      	mov	r8, r0
 8000ce4:	469a      	mov	sl, r3
 8000ce6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cea:	d807      	bhi.n	8000cfc <_printf_i+0x28>
 8000cec:	2f62      	cmp	r7, #98	; 0x62
 8000cee:	d80a      	bhi.n	8000d06 <_printf_i+0x32>
 8000cf0:	2f00      	cmp	r7, #0
 8000cf2:	f000 80d8 	beq.w	8000ea6 <_printf_i+0x1d2>
 8000cf6:	2f58      	cmp	r7, #88	; 0x58
 8000cf8:	f000 80a3 	beq.w	8000e42 <_printf_i+0x16e>
 8000cfc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000d00:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d04:	e03a      	b.n	8000d7c <_printf_i+0xa8>
 8000d06:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d0a:	2b15      	cmp	r3, #21
 8000d0c:	d8f6      	bhi.n	8000cfc <_printf_i+0x28>
 8000d0e:	a001      	add	r0, pc, #4	; (adr r0, 8000d14 <_printf_i+0x40>)
 8000d10:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000d14:	08000d6d 	.word	0x08000d6d
 8000d18:	08000d81 	.word	0x08000d81
 8000d1c:	08000cfd 	.word	0x08000cfd
 8000d20:	08000cfd 	.word	0x08000cfd
 8000d24:	08000cfd 	.word	0x08000cfd
 8000d28:	08000cfd 	.word	0x08000cfd
 8000d2c:	08000d81 	.word	0x08000d81
 8000d30:	08000cfd 	.word	0x08000cfd
 8000d34:	08000cfd 	.word	0x08000cfd
 8000d38:	08000cfd 	.word	0x08000cfd
 8000d3c:	08000cfd 	.word	0x08000cfd
 8000d40:	08000e8d 	.word	0x08000e8d
 8000d44:	08000db1 	.word	0x08000db1
 8000d48:	08000e6f 	.word	0x08000e6f
 8000d4c:	08000cfd 	.word	0x08000cfd
 8000d50:	08000cfd 	.word	0x08000cfd
 8000d54:	08000eaf 	.word	0x08000eaf
 8000d58:	08000cfd 	.word	0x08000cfd
 8000d5c:	08000db1 	.word	0x08000db1
 8000d60:	08000cfd 	.word	0x08000cfd
 8000d64:	08000cfd 	.word	0x08000cfd
 8000d68:	08000e77 	.word	0x08000e77
 8000d6c:	680b      	ldr	r3, [r1, #0]
 8000d6e:	1d1a      	adds	r2, r3, #4
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	600a      	str	r2, [r1, #0]
 8000d74:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000d78:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d7c:	2301      	movs	r3, #1
 8000d7e:	e0a3      	b.n	8000ec8 <_printf_i+0x1f4>
 8000d80:	6825      	ldr	r5, [r4, #0]
 8000d82:	6808      	ldr	r0, [r1, #0]
 8000d84:	062e      	lsls	r6, r5, #24
 8000d86:	f100 0304 	add.w	r3, r0, #4
 8000d8a:	d50a      	bpl.n	8000da2 <_printf_i+0xce>
 8000d8c:	6805      	ldr	r5, [r0, #0]
 8000d8e:	600b      	str	r3, [r1, #0]
 8000d90:	2d00      	cmp	r5, #0
 8000d92:	da03      	bge.n	8000d9c <_printf_i+0xc8>
 8000d94:	232d      	movs	r3, #45	; 0x2d
 8000d96:	426d      	negs	r5, r5
 8000d98:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d9c:	485e      	ldr	r0, [pc, #376]	; (8000f18 <_printf_i+0x244>)
 8000d9e:	230a      	movs	r3, #10
 8000da0:	e019      	b.n	8000dd6 <_printf_i+0x102>
 8000da2:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000da6:	6805      	ldr	r5, [r0, #0]
 8000da8:	600b      	str	r3, [r1, #0]
 8000daa:	bf18      	it	ne
 8000dac:	b22d      	sxthne	r5, r5
 8000dae:	e7ef      	b.n	8000d90 <_printf_i+0xbc>
 8000db0:	680b      	ldr	r3, [r1, #0]
 8000db2:	6825      	ldr	r5, [r4, #0]
 8000db4:	1d18      	adds	r0, r3, #4
 8000db6:	6008      	str	r0, [r1, #0]
 8000db8:	0628      	lsls	r0, r5, #24
 8000dba:	d501      	bpl.n	8000dc0 <_printf_i+0xec>
 8000dbc:	681d      	ldr	r5, [r3, #0]
 8000dbe:	e002      	b.n	8000dc6 <_printf_i+0xf2>
 8000dc0:	0669      	lsls	r1, r5, #25
 8000dc2:	d5fb      	bpl.n	8000dbc <_printf_i+0xe8>
 8000dc4:	881d      	ldrh	r5, [r3, #0]
 8000dc6:	4854      	ldr	r0, [pc, #336]	; (8000f18 <_printf_i+0x244>)
 8000dc8:	2f6f      	cmp	r7, #111	; 0x6f
 8000dca:	bf0c      	ite	eq
 8000dcc:	2308      	moveq	r3, #8
 8000dce:	230a      	movne	r3, #10
 8000dd0:	2100      	movs	r1, #0
 8000dd2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dd6:	6866      	ldr	r6, [r4, #4]
 8000dd8:	60a6      	str	r6, [r4, #8]
 8000dda:	2e00      	cmp	r6, #0
 8000ddc:	bfa2      	ittt	ge
 8000dde:	6821      	ldrge	r1, [r4, #0]
 8000de0:	f021 0104 	bicge.w	r1, r1, #4
 8000de4:	6021      	strge	r1, [r4, #0]
 8000de6:	b90d      	cbnz	r5, 8000dec <_printf_i+0x118>
 8000de8:	2e00      	cmp	r6, #0
 8000dea:	d04d      	beq.n	8000e88 <_printf_i+0x1b4>
 8000dec:	4616      	mov	r6, r2
 8000dee:	fbb5 f1f3 	udiv	r1, r5, r3
 8000df2:	fb03 5711 	mls	r7, r3, r1, r5
 8000df6:	5dc7      	ldrb	r7, [r0, r7]
 8000df8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000dfc:	462f      	mov	r7, r5
 8000dfe:	42bb      	cmp	r3, r7
 8000e00:	460d      	mov	r5, r1
 8000e02:	d9f4      	bls.n	8000dee <_printf_i+0x11a>
 8000e04:	2b08      	cmp	r3, #8
 8000e06:	d10b      	bne.n	8000e20 <_printf_i+0x14c>
 8000e08:	6823      	ldr	r3, [r4, #0]
 8000e0a:	07df      	lsls	r7, r3, #31
 8000e0c:	d508      	bpl.n	8000e20 <_printf_i+0x14c>
 8000e0e:	6923      	ldr	r3, [r4, #16]
 8000e10:	6861      	ldr	r1, [r4, #4]
 8000e12:	4299      	cmp	r1, r3
 8000e14:	bfde      	ittt	le
 8000e16:	2330      	movle	r3, #48	; 0x30
 8000e18:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e1c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e20:	1b92      	subs	r2, r2, r6
 8000e22:	6122      	str	r2, [r4, #16]
 8000e24:	f8cd a000 	str.w	sl, [sp]
 8000e28:	464b      	mov	r3, r9
 8000e2a:	aa03      	add	r2, sp, #12
 8000e2c:	4621      	mov	r1, r4
 8000e2e:	4640      	mov	r0, r8
 8000e30:	f7ff fee2 	bl	8000bf8 <_printf_common>
 8000e34:	3001      	adds	r0, #1
 8000e36:	d14c      	bne.n	8000ed2 <_printf_i+0x1fe>
 8000e38:	f04f 30ff 	mov.w	r0, #4294967295
 8000e3c:	b004      	add	sp, #16
 8000e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e42:	4835      	ldr	r0, [pc, #212]	; (8000f18 <_printf_i+0x244>)
 8000e44:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e48:	6823      	ldr	r3, [r4, #0]
 8000e4a:	680e      	ldr	r6, [r1, #0]
 8000e4c:	061f      	lsls	r7, r3, #24
 8000e4e:	f856 5b04 	ldr.w	r5, [r6], #4
 8000e52:	600e      	str	r6, [r1, #0]
 8000e54:	d514      	bpl.n	8000e80 <_printf_i+0x1ac>
 8000e56:	07d9      	lsls	r1, r3, #31
 8000e58:	bf44      	itt	mi
 8000e5a:	f043 0320 	orrmi.w	r3, r3, #32
 8000e5e:	6023      	strmi	r3, [r4, #0]
 8000e60:	b91d      	cbnz	r5, 8000e6a <_printf_i+0x196>
 8000e62:	6823      	ldr	r3, [r4, #0]
 8000e64:	f023 0320 	bic.w	r3, r3, #32
 8000e68:	6023      	str	r3, [r4, #0]
 8000e6a:	2310      	movs	r3, #16
 8000e6c:	e7b0      	b.n	8000dd0 <_printf_i+0xfc>
 8000e6e:	6823      	ldr	r3, [r4, #0]
 8000e70:	f043 0320 	orr.w	r3, r3, #32
 8000e74:	6023      	str	r3, [r4, #0]
 8000e76:	2378      	movs	r3, #120	; 0x78
 8000e78:	4828      	ldr	r0, [pc, #160]	; (8000f1c <_printf_i+0x248>)
 8000e7a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e7e:	e7e3      	b.n	8000e48 <_printf_i+0x174>
 8000e80:	065e      	lsls	r6, r3, #25
 8000e82:	bf48      	it	mi
 8000e84:	b2ad      	uxthmi	r5, r5
 8000e86:	e7e6      	b.n	8000e56 <_printf_i+0x182>
 8000e88:	4616      	mov	r6, r2
 8000e8a:	e7bb      	b.n	8000e04 <_printf_i+0x130>
 8000e8c:	680b      	ldr	r3, [r1, #0]
 8000e8e:	6826      	ldr	r6, [r4, #0]
 8000e90:	6960      	ldr	r0, [r4, #20]
 8000e92:	1d1d      	adds	r5, r3, #4
 8000e94:	600d      	str	r5, [r1, #0]
 8000e96:	0635      	lsls	r5, r6, #24
 8000e98:	681b      	ldr	r3, [r3, #0]
 8000e9a:	d501      	bpl.n	8000ea0 <_printf_i+0x1cc>
 8000e9c:	6018      	str	r0, [r3, #0]
 8000e9e:	e002      	b.n	8000ea6 <_printf_i+0x1d2>
 8000ea0:	0671      	lsls	r1, r6, #25
 8000ea2:	d5fb      	bpl.n	8000e9c <_printf_i+0x1c8>
 8000ea4:	8018      	strh	r0, [r3, #0]
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	6123      	str	r3, [r4, #16]
 8000eaa:	4616      	mov	r6, r2
 8000eac:	e7ba      	b.n	8000e24 <_printf_i+0x150>
 8000eae:	680b      	ldr	r3, [r1, #0]
 8000eb0:	1d1a      	adds	r2, r3, #4
 8000eb2:	600a      	str	r2, [r1, #0]
 8000eb4:	681e      	ldr	r6, [r3, #0]
 8000eb6:	6862      	ldr	r2, [r4, #4]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	4630      	mov	r0, r6
 8000ebc:	f7ff f9a8 	bl	8000210 <memchr>
 8000ec0:	b108      	cbz	r0, 8000ec6 <_printf_i+0x1f2>
 8000ec2:	1b80      	subs	r0, r0, r6
 8000ec4:	6060      	str	r0, [r4, #4]
 8000ec6:	6863      	ldr	r3, [r4, #4]
 8000ec8:	6123      	str	r3, [r4, #16]
 8000eca:	2300      	movs	r3, #0
 8000ecc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ed0:	e7a8      	b.n	8000e24 <_printf_i+0x150>
 8000ed2:	6923      	ldr	r3, [r4, #16]
 8000ed4:	4632      	mov	r2, r6
 8000ed6:	4649      	mov	r1, r9
 8000ed8:	4640      	mov	r0, r8
 8000eda:	47d0      	blx	sl
 8000edc:	3001      	adds	r0, #1
 8000ede:	d0ab      	beq.n	8000e38 <_printf_i+0x164>
 8000ee0:	6823      	ldr	r3, [r4, #0]
 8000ee2:	079b      	lsls	r3, r3, #30
 8000ee4:	d413      	bmi.n	8000f0e <_printf_i+0x23a>
 8000ee6:	68e0      	ldr	r0, [r4, #12]
 8000ee8:	9b03      	ldr	r3, [sp, #12]
 8000eea:	4298      	cmp	r0, r3
 8000eec:	bfb8      	it	lt
 8000eee:	4618      	movlt	r0, r3
 8000ef0:	e7a4      	b.n	8000e3c <_printf_i+0x168>
 8000ef2:	2301      	movs	r3, #1
 8000ef4:	4632      	mov	r2, r6
 8000ef6:	4649      	mov	r1, r9
 8000ef8:	4640      	mov	r0, r8
 8000efa:	47d0      	blx	sl
 8000efc:	3001      	adds	r0, #1
 8000efe:	d09b      	beq.n	8000e38 <_printf_i+0x164>
 8000f00:	3501      	adds	r5, #1
 8000f02:	68e3      	ldr	r3, [r4, #12]
 8000f04:	9903      	ldr	r1, [sp, #12]
 8000f06:	1a5b      	subs	r3, r3, r1
 8000f08:	42ab      	cmp	r3, r5
 8000f0a:	dcf2      	bgt.n	8000ef2 <_printf_i+0x21e>
 8000f0c:	e7eb      	b.n	8000ee6 <_printf_i+0x212>
 8000f0e:	2500      	movs	r5, #0
 8000f10:	f104 0619 	add.w	r6, r4, #25
 8000f14:	e7f5      	b.n	8000f02 <_printf_i+0x22e>
 8000f16:	bf00      	nop
 8000f18:	080015bd 	.word	0x080015bd
 8000f1c:	080015ce 	.word	0x080015ce

08000f20 <_sbrk_r>:
 8000f20:	b538      	push	{r3, r4, r5, lr}
 8000f22:	4d06      	ldr	r5, [pc, #24]	; (8000f3c <_sbrk_r+0x1c>)
 8000f24:	2300      	movs	r3, #0
 8000f26:	4604      	mov	r4, r0
 8000f28:	4608      	mov	r0, r1
 8000f2a:	602b      	str	r3, [r5, #0]
 8000f2c:	f7ff fa9a 	bl	8000464 <_sbrk>
 8000f30:	1c43      	adds	r3, r0, #1
 8000f32:	d102      	bne.n	8000f3a <_sbrk_r+0x1a>
 8000f34:	682b      	ldr	r3, [r5, #0]
 8000f36:	b103      	cbz	r3, 8000f3a <_sbrk_r+0x1a>
 8000f38:	6023      	str	r3, [r4, #0]
 8000f3a:	bd38      	pop	{r3, r4, r5, pc}
 8000f3c:	2000009c 	.word	0x2000009c

08000f40 <__sread>:
 8000f40:	b510      	push	{r4, lr}
 8000f42:	460c      	mov	r4, r1
 8000f44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f48:	f000 fab4 	bl	80014b4 <_read_r>
 8000f4c:	2800      	cmp	r0, #0
 8000f4e:	bfab      	itete	ge
 8000f50:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f52:	89a3      	ldrhlt	r3, [r4, #12]
 8000f54:	181b      	addge	r3, r3, r0
 8000f56:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f5a:	bfac      	ite	ge
 8000f5c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f5e:	81a3      	strhlt	r3, [r4, #12]
 8000f60:	bd10      	pop	{r4, pc}

08000f62 <__swrite>:
 8000f62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f66:	461f      	mov	r7, r3
 8000f68:	898b      	ldrh	r3, [r1, #12]
 8000f6a:	05db      	lsls	r3, r3, #23
 8000f6c:	4605      	mov	r5, r0
 8000f6e:	460c      	mov	r4, r1
 8000f70:	4616      	mov	r6, r2
 8000f72:	d505      	bpl.n	8000f80 <__swrite+0x1e>
 8000f74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f78:	2302      	movs	r3, #2
 8000f7a:	2200      	movs	r2, #0
 8000f7c:	f000 f9c8 	bl	8001310 <_lseek_r>
 8000f80:	89a3      	ldrh	r3, [r4, #12]
 8000f82:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f86:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f8a:	81a3      	strh	r3, [r4, #12]
 8000f8c:	4632      	mov	r2, r6
 8000f8e:	463b      	mov	r3, r7
 8000f90:	4628      	mov	r0, r5
 8000f92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f96:	f000 b869 	b.w	800106c <_write_r>

08000f9a <__sseek>:
 8000f9a:	b510      	push	{r4, lr}
 8000f9c:	460c      	mov	r4, r1
 8000f9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fa2:	f000 f9b5 	bl	8001310 <_lseek_r>
 8000fa6:	1c43      	adds	r3, r0, #1
 8000fa8:	89a3      	ldrh	r3, [r4, #12]
 8000faa:	bf15      	itete	ne
 8000fac:	6560      	strne	r0, [r4, #84]	; 0x54
 8000fae:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000fb2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000fb6:	81a3      	strheq	r3, [r4, #12]
 8000fb8:	bf18      	it	ne
 8000fba:	81a3      	strhne	r3, [r4, #12]
 8000fbc:	bd10      	pop	{r4, pc}

08000fbe <__sclose>:
 8000fbe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fc2:	f000 b8d3 	b.w	800116c <_close_r>
	...

08000fc8 <__swbuf_r>:
 8000fc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fca:	460e      	mov	r6, r1
 8000fcc:	4614      	mov	r4, r2
 8000fce:	4605      	mov	r5, r0
 8000fd0:	b118      	cbz	r0, 8000fda <__swbuf_r+0x12>
 8000fd2:	6983      	ldr	r3, [r0, #24]
 8000fd4:	b90b      	cbnz	r3, 8000fda <__swbuf_r+0x12>
 8000fd6:	f7ff fbbb 	bl	8000750 <__sinit>
 8000fda:	4b21      	ldr	r3, [pc, #132]	; (8001060 <__swbuf_r+0x98>)
 8000fdc:	429c      	cmp	r4, r3
 8000fde:	d12b      	bne.n	8001038 <__swbuf_r+0x70>
 8000fe0:	686c      	ldr	r4, [r5, #4]
 8000fe2:	69a3      	ldr	r3, [r4, #24]
 8000fe4:	60a3      	str	r3, [r4, #8]
 8000fe6:	89a3      	ldrh	r3, [r4, #12]
 8000fe8:	071a      	lsls	r2, r3, #28
 8000fea:	d52f      	bpl.n	800104c <__swbuf_r+0x84>
 8000fec:	6923      	ldr	r3, [r4, #16]
 8000fee:	b36b      	cbz	r3, 800104c <__swbuf_r+0x84>
 8000ff0:	6923      	ldr	r3, [r4, #16]
 8000ff2:	6820      	ldr	r0, [r4, #0]
 8000ff4:	1ac0      	subs	r0, r0, r3
 8000ff6:	6963      	ldr	r3, [r4, #20]
 8000ff8:	b2f6      	uxtb	r6, r6
 8000ffa:	4283      	cmp	r3, r0
 8000ffc:	4637      	mov	r7, r6
 8000ffe:	dc04      	bgt.n	800100a <__swbuf_r+0x42>
 8001000:	4621      	mov	r1, r4
 8001002:	4628      	mov	r0, r5
 8001004:	f000 f948 	bl	8001298 <_fflush_r>
 8001008:	bb30      	cbnz	r0, 8001058 <__swbuf_r+0x90>
 800100a:	68a3      	ldr	r3, [r4, #8]
 800100c:	3b01      	subs	r3, #1
 800100e:	60a3      	str	r3, [r4, #8]
 8001010:	6823      	ldr	r3, [r4, #0]
 8001012:	1c5a      	adds	r2, r3, #1
 8001014:	6022      	str	r2, [r4, #0]
 8001016:	701e      	strb	r6, [r3, #0]
 8001018:	6963      	ldr	r3, [r4, #20]
 800101a:	3001      	adds	r0, #1
 800101c:	4283      	cmp	r3, r0
 800101e:	d004      	beq.n	800102a <__swbuf_r+0x62>
 8001020:	89a3      	ldrh	r3, [r4, #12]
 8001022:	07db      	lsls	r3, r3, #31
 8001024:	d506      	bpl.n	8001034 <__swbuf_r+0x6c>
 8001026:	2e0a      	cmp	r6, #10
 8001028:	d104      	bne.n	8001034 <__swbuf_r+0x6c>
 800102a:	4621      	mov	r1, r4
 800102c:	4628      	mov	r0, r5
 800102e:	f000 f933 	bl	8001298 <_fflush_r>
 8001032:	b988      	cbnz	r0, 8001058 <__swbuf_r+0x90>
 8001034:	4638      	mov	r0, r7
 8001036:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001038:	4b0a      	ldr	r3, [pc, #40]	; (8001064 <__swbuf_r+0x9c>)
 800103a:	429c      	cmp	r4, r3
 800103c:	d101      	bne.n	8001042 <__swbuf_r+0x7a>
 800103e:	68ac      	ldr	r4, [r5, #8]
 8001040:	e7cf      	b.n	8000fe2 <__swbuf_r+0x1a>
 8001042:	4b09      	ldr	r3, [pc, #36]	; (8001068 <__swbuf_r+0xa0>)
 8001044:	429c      	cmp	r4, r3
 8001046:	bf08      	it	eq
 8001048:	68ec      	ldreq	r4, [r5, #12]
 800104a:	e7ca      	b.n	8000fe2 <__swbuf_r+0x1a>
 800104c:	4621      	mov	r1, r4
 800104e:	4628      	mov	r0, r5
 8001050:	f000 f81e 	bl	8001090 <__swsetup_r>
 8001054:	2800      	cmp	r0, #0
 8001056:	d0cb      	beq.n	8000ff0 <__swbuf_r+0x28>
 8001058:	f04f 37ff 	mov.w	r7, #4294967295
 800105c:	e7ea      	b.n	8001034 <__swbuf_r+0x6c>
 800105e:	bf00      	nop
 8001060:	0800156c 	.word	0x0800156c
 8001064:	0800158c 	.word	0x0800158c
 8001068:	0800154c 	.word	0x0800154c

0800106c <_write_r>:
 800106c:	b538      	push	{r3, r4, r5, lr}
 800106e:	4d07      	ldr	r5, [pc, #28]	; (800108c <_write_r+0x20>)
 8001070:	4604      	mov	r4, r0
 8001072:	4608      	mov	r0, r1
 8001074:	4611      	mov	r1, r2
 8001076:	2200      	movs	r2, #0
 8001078:	602a      	str	r2, [r5, #0]
 800107a:	461a      	mov	r2, r3
 800107c:	f7ff f9a1 	bl	80003c2 <_write>
 8001080:	1c43      	adds	r3, r0, #1
 8001082:	d102      	bne.n	800108a <_write_r+0x1e>
 8001084:	682b      	ldr	r3, [r5, #0]
 8001086:	b103      	cbz	r3, 800108a <_write_r+0x1e>
 8001088:	6023      	str	r3, [r4, #0]
 800108a:	bd38      	pop	{r3, r4, r5, pc}
 800108c:	2000009c 	.word	0x2000009c

08001090 <__swsetup_r>:
 8001090:	4b32      	ldr	r3, [pc, #200]	; (800115c <__swsetup_r+0xcc>)
 8001092:	b570      	push	{r4, r5, r6, lr}
 8001094:	681d      	ldr	r5, [r3, #0]
 8001096:	4606      	mov	r6, r0
 8001098:	460c      	mov	r4, r1
 800109a:	b125      	cbz	r5, 80010a6 <__swsetup_r+0x16>
 800109c:	69ab      	ldr	r3, [r5, #24]
 800109e:	b913      	cbnz	r3, 80010a6 <__swsetup_r+0x16>
 80010a0:	4628      	mov	r0, r5
 80010a2:	f7ff fb55 	bl	8000750 <__sinit>
 80010a6:	4b2e      	ldr	r3, [pc, #184]	; (8001160 <__swsetup_r+0xd0>)
 80010a8:	429c      	cmp	r4, r3
 80010aa:	d10f      	bne.n	80010cc <__swsetup_r+0x3c>
 80010ac:	686c      	ldr	r4, [r5, #4]
 80010ae:	89a3      	ldrh	r3, [r4, #12]
 80010b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010b4:	0719      	lsls	r1, r3, #28
 80010b6:	d42c      	bmi.n	8001112 <__swsetup_r+0x82>
 80010b8:	06dd      	lsls	r5, r3, #27
 80010ba:	d411      	bmi.n	80010e0 <__swsetup_r+0x50>
 80010bc:	2309      	movs	r3, #9
 80010be:	6033      	str	r3, [r6, #0]
 80010c0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80010c4:	81a3      	strh	r3, [r4, #12]
 80010c6:	f04f 30ff 	mov.w	r0, #4294967295
 80010ca:	e03e      	b.n	800114a <__swsetup_r+0xba>
 80010cc:	4b25      	ldr	r3, [pc, #148]	; (8001164 <__swsetup_r+0xd4>)
 80010ce:	429c      	cmp	r4, r3
 80010d0:	d101      	bne.n	80010d6 <__swsetup_r+0x46>
 80010d2:	68ac      	ldr	r4, [r5, #8]
 80010d4:	e7eb      	b.n	80010ae <__swsetup_r+0x1e>
 80010d6:	4b24      	ldr	r3, [pc, #144]	; (8001168 <__swsetup_r+0xd8>)
 80010d8:	429c      	cmp	r4, r3
 80010da:	bf08      	it	eq
 80010dc:	68ec      	ldreq	r4, [r5, #12]
 80010de:	e7e6      	b.n	80010ae <__swsetup_r+0x1e>
 80010e0:	0758      	lsls	r0, r3, #29
 80010e2:	d512      	bpl.n	800110a <__swsetup_r+0x7a>
 80010e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010e6:	b141      	cbz	r1, 80010fa <__swsetup_r+0x6a>
 80010e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010ec:	4299      	cmp	r1, r3
 80010ee:	d002      	beq.n	80010f6 <__swsetup_r+0x66>
 80010f0:	4630      	mov	r0, r6
 80010f2:	f000 f98f 	bl	8001414 <_free_r>
 80010f6:	2300      	movs	r3, #0
 80010f8:	6363      	str	r3, [r4, #52]	; 0x34
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001100:	81a3      	strh	r3, [r4, #12]
 8001102:	2300      	movs	r3, #0
 8001104:	6063      	str	r3, [r4, #4]
 8001106:	6923      	ldr	r3, [r4, #16]
 8001108:	6023      	str	r3, [r4, #0]
 800110a:	89a3      	ldrh	r3, [r4, #12]
 800110c:	f043 0308 	orr.w	r3, r3, #8
 8001110:	81a3      	strh	r3, [r4, #12]
 8001112:	6923      	ldr	r3, [r4, #16]
 8001114:	b94b      	cbnz	r3, 800112a <__swsetup_r+0x9a>
 8001116:	89a3      	ldrh	r3, [r4, #12]
 8001118:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800111c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001120:	d003      	beq.n	800112a <__swsetup_r+0x9a>
 8001122:	4621      	mov	r1, r4
 8001124:	4630      	mov	r0, r6
 8001126:	f000 f929 	bl	800137c <__smakebuf_r>
 800112a:	89a0      	ldrh	r0, [r4, #12]
 800112c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001130:	f010 0301 	ands.w	r3, r0, #1
 8001134:	d00a      	beq.n	800114c <__swsetup_r+0xbc>
 8001136:	2300      	movs	r3, #0
 8001138:	60a3      	str	r3, [r4, #8]
 800113a:	6963      	ldr	r3, [r4, #20]
 800113c:	425b      	negs	r3, r3
 800113e:	61a3      	str	r3, [r4, #24]
 8001140:	6923      	ldr	r3, [r4, #16]
 8001142:	b943      	cbnz	r3, 8001156 <__swsetup_r+0xc6>
 8001144:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001148:	d1ba      	bne.n	80010c0 <__swsetup_r+0x30>
 800114a:	bd70      	pop	{r4, r5, r6, pc}
 800114c:	0781      	lsls	r1, r0, #30
 800114e:	bf58      	it	pl
 8001150:	6963      	ldrpl	r3, [r4, #20]
 8001152:	60a3      	str	r3, [r4, #8]
 8001154:	e7f4      	b.n	8001140 <__swsetup_r+0xb0>
 8001156:	2000      	movs	r0, #0
 8001158:	e7f7      	b.n	800114a <__swsetup_r+0xba>
 800115a:	bf00      	nop
 800115c:	20000000 	.word	0x20000000
 8001160:	0800156c 	.word	0x0800156c
 8001164:	0800158c 	.word	0x0800158c
 8001168:	0800154c 	.word	0x0800154c

0800116c <_close_r>:
 800116c:	b538      	push	{r3, r4, r5, lr}
 800116e:	4d06      	ldr	r5, [pc, #24]	; (8001188 <_close_r+0x1c>)
 8001170:	2300      	movs	r3, #0
 8001172:	4604      	mov	r4, r0
 8001174:	4608      	mov	r0, r1
 8001176:	602b      	str	r3, [r5, #0]
 8001178:	f7ff f93f 	bl	80003fa <_close>
 800117c:	1c43      	adds	r3, r0, #1
 800117e:	d102      	bne.n	8001186 <_close_r+0x1a>
 8001180:	682b      	ldr	r3, [r5, #0]
 8001182:	b103      	cbz	r3, 8001186 <_close_r+0x1a>
 8001184:	6023      	str	r3, [r4, #0]
 8001186:	bd38      	pop	{r3, r4, r5, pc}
 8001188:	2000009c 	.word	0x2000009c

0800118c <__sflush_r>:
 800118c:	898a      	ldrh	r2, [r1, #12]
 800118e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001192:	4605      	mov	r5, r0
 8001194:	0710      	lsls	r0, r2, #28
 8001196:	460c      	mov	r4, r1
 8001198:	d458      	bmi.n	800124c <__sflush_r+0xc0>
 800119a:	684b      	ldr	r3, [r1, #4]
 800119c:	2b00      	cmp	r3, #0
 800119e:	dc05      	bgt.n	80011ac <__sflush_r+0x20>
 80011a0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	dc02      	bgt.n	80011ac <__sflush_r+0x20>
 80011a6:	2000      	movs	r0, #0
 80011a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011ae:	2e00      	cmp	r6, #0
 80011b0:	d0f9      	beq.n	80011a6 <__sflush_r+0x1a>
 80011b2:	2300      	movs	r3, #0
 80011b4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011b8:	682f      	ldr	r7, [r5, #0]
 80011ba:	602b      	str	r3, [r5, #0]
 80011bc:	d032      	beq.n	8001224 <__sflush_r+0x98>
 80011be:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011c0:	89a3      	ldrh	r3, [r4, #12]
 80011c2:	075a      	lsls	r2, r3, #29
 80011c4:	d505      	bpl.n	80011d2 <__sflush_r+0x46>
 80011c6:	6863      	ldr	r3, [r4, #4]
 80011c8:	1ac0      	subs	r0, r0, r3
 80011ca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011cc:	b10b      	cbz	r3, 80011d2 <__sflush_r+0x46>
 80011ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011d0:	1ac0      	subs	r0, r0, r3
 80011d2:	2300      	movs	r3, #0
 80011d4:	4602      	mov	r2, r0
 80011d6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011d8:	6a21      	ldr	r1, [r4, #32]
 80011da:	4628      	mov	r0, r5
 80011dc:	47b0      	blx	r6
 80011de:	1c43      	adds	r3, r0, #1
 80011e0:	89a3      	ldrh	r3, [r4, #12]
 80011e2:	d106      	bne.n	80011f2 <__sflush_r+0x66>
 80011e4:	6829      	ldr	r1, [r5, #0]
 80011e6:	291d      	cmp	r1, #29
 80011e8:	d82c      	bhi.n	8001244 <__sflush_r+0xb8>
 80011ea:	4a2a      	ldr	r2, [pc, #168]	; (8001294 <__sflush_r+0x108>)
 80011ec:	40ca      	lsrs	r2, r1
 80011ee:	07d6      	lsls	r6, r2, #31
 80011f0:	d528      	bpl.n	8001244 <__sflush_r+0xb8>
 80011f2:	2200      	movs	r2, #0
 80011f4:	6062      	str	r2, [r4, #4]
 80011f6:	04d9      	lsls	r1, r3, #19
 80011f8:	6922      	ldr	r2, [r4, #16]
 80011fa:	6022      	str	r2, [r4, #0]
 80011fc:	d504      	bpl.n	8001208 <__sflush_r+0x7c>
 80011fe:	1c42      	adds	r2, r0, #1
 8001200:	d101      	bne.n	8001206 <__sflush_r+0x7a>
 8001202:	682b      	ldr	r3, [r5, #0]
 8001204:	b903      	cbnz	r3, 8001208 <__sflush_r+0x7c>
 8001206:	6560      	str	r0, [r4, #84]	; 0x54
 8001208:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800120a:	602f      	str	r7, [r5, #0]
 800120c:	2900      	cmp	r1, #0
 800120e:	d0ca      	beq.n	80011a6 <__sflush_r+0x1a>
 8001210:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001214:	4299      	cmp	r1, r3
 8001216:	d002      	beq.n	800121e <__sflush_r+0x92>
 8001218:	4628      	mov	r0, r5
 800121a:	f000 f8fb 	bl	8001414 <_free_r>
 800121e:	2000      	movs	r0, #0
 8001220:	6360      	str	r0, [r4, #52]	; 0x34
 8001222:	e7c1      	b.n	80011a8 <__sflush_r+0x1c>
 8001224:	6a21      	ldr	r1, [r4, #32]
 8001226:	2301      	movs	r3, #1
 8001228:	4628      	mov	r0, r5
 800122a:	47b0      	blx	r6
 800122c:	1c41      	adds	r1, r0, #1
 800122e:	d1c7      	bne.n	80011c0 <__sflush_r+0x34>
 8001230:	682b      	ldr	r3, [r5, #0]
 8001232:	2b00      	cmp	r3, #0
 8001234:	d0c4      	beq.n	80011c0 <__sflush_r+0x34>
 8001236:	2b1d      	cmp	r3, #29
 8001238:	d001      	beq.n	800123e <__sflush_r+0xb2>
 800123a:	2b16      	cmp	r3, #22
 800123c:	d101      	bne.n	8001242 <__sflush_r+0xb6>
 800123e:	602f      	str	r7, [r5, #0]
 8001240:	e7b1      	b.n	80011a6 <__sflush_r+0x1a>
 8001242:	89a3      	ldrh	r3, [r4, #12]
 8001244:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001248:	81a3      	strh	r3, [r4, #12]
 800124a:	e7ad      	b.n	80011a8 <__sflush_r+0x1c>
 800124c:	690f      	ldr	r7, [r1, #16]
 800124e:	2f00      	cmp	r7, #0
 8001250:	d0a9      	beq.n	80011a6 <__sflush_r+0x1a>
 8001252:	0793      	lsls	r3, r2, #30
 8001254:	680e      	ldr	r6, [r1, #0]
 8001256:	bf08      	it	eq
 8001258:	694b      	ldreq	r3, [r1, #20]
 800125a:	600f      	str	r7, [r1, #0]
 800125c:	bf18      	it	ne
 800125e:	2300      	movne	r3, #0
 8001260:	eba6 0807 	sub.w	r8, r6, r7
 8001264:	608b      	str	r3, [r1, #8]
 8001266:	f1b8 0f00 	cmp.w	r8, #0
 800126a:	dd9c      	ble.n	80011a6 <__sflush_r+0x1a>
 800126c:	6a21      	ldr	r1, [r4, #32]
 800126e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001270:	4643      	mov	r3, r8
 8001272:	463a      	mov	r2, r7
 8001274:	4628      	mov	r0, r5
 8001276:	47b0      	blx	r6
 8001278:	2800      	cmp	r0, #0
 800127a:	dc06      	bgt.n	800128a <__sflush_r+0xfe>
 800127c:	89a3      	ldrh	r3, [r4, #12]
 800127e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001282:	81a3      	strh	r3, [r4, #12]
 8001284:	f04f 30ff 	mov.w	r0, #4294967295
 8001288:	e78e      	b.n	80011a8 <__sflush_r+0x1c>
 800128a:	4407      	add	r7, r0
 800128c:	eba8 0800 	sub.w	r8, r8, r0
 8001290:	e7e9      	b.n	8001266 <__sflush_r+0xda>
 8001292:	bf00      	nop
 8001294:	20400001 	.word	0x20400001

08001298 <_fflush_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	690b      	ldr	r3, [r1, #16]
 800129c:	4605      	mov	r5, r0
 800129e:	460c      	mov	r4, r1
 80012a0:	b913      	cbnz	r3, 80012a8 <_fflush_r+0x10>
 80012a2:	2500      	movs	r5, #0
 80012a4:	4628      	mov	r0, r5
 80012a6:	bd38      	pop	{r3, r4, r5, pc}
 80012a8:	b118      	cbz	r0, 80012b2 <_fflush_r+0x1a>
 80012aa:	6983      	ldr	r3, [r0, #24]
 80012ac:	b90b      	cbnz	r3, 80012b2 <_fflush_r+0x1a>
 80012ae:	f7ff fa4f 	bl	8000750 <__sinit>
 80012b2:	4b14      	ldr	r3, [pc, #80]	; (8001304 <_fflush_r+0x6c>)
 80012b4:	429c      	cmp	r4, r3
 80012b6:	d11b      	bne.n	80012f0 <_fflush_r+0x58>
 80012b8:	686c      	ldr	r4, [r5, #4]
 80012ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012be:	2b00      	cmp	r3, #0
 80012c0:	d0ef      	beq.n	80012a2 <_fflush_r+0xa>
 80012c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012c4:	07d0      	lsls	r0, r2, #31
 80012c6:	d404      	bmi.n	80012d2 <_fflush_r+0x3a>
 80012c8:	0599      	lsls	r1, r3, #22
 80012ca:	d402      	bmi.n	80012d2 <_fflush_r+0x3a>
 80012cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ce:	f7ff fadd 	bl	800088c <__retarget_lock_acquire_recursive>
 80012d2:	4628      	mov	r0, r5
 80012d4:	4621      	mov	r1, r4
 80012d6:	f7ff ff59 	bl	800118c <__sflush_r>
 80012da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012dc:	07da      	lsls	r2, r3, #31
 80012de:	4605      	mov	r5, r0
 80012e0:	d4e0      	bmi.n	80012a4 <_fflush_r+0xc>
 80012e2:	89a3      	ldrh	r3, [r4, #12]
 80012e4:	059b      	lsls	r3, r3, #22
 80012e6:	d4dd      	bmi.n	80012a4 <_fflush_r+0xc>
 80012e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ea:	f7ff fad0 	bl	800088e <__retarget_lock_release_recursive>
 80012ee:	e7d9      	b.n	80012a4 <_fflush_r+0xc>
 80012f0:	4b05      	ldr	r3, [pc, #20]	; (8001308 <_fflush_r+0x70>)
 80012f2:	429c      	cmp	r4, r3
 80012f4:	d101      	bne.n	80012fa <_fflush_r+0x62>
 80012f6:	68ac      	ldr	r4, [r5, #8]
 80012f8:	e7df      	b.n	80012ba <_fflush_r+0x22>
 80012fa:	4b04      	ldr	r3, [pc, #16]	; (800130c <_fflush_r+0x74>)
 80012fc:	429c      	cmp	r4, r3
 80012fe:	bf08      	it	eq
 8001300:	68ec      	ldreq	r4, [r5, #12]
 8001302:	e7da      	b.n	80012ba <_fflush_r+0x22>
 8001304:	0800156c 	.word	0x0800156c
 8001308:	0800158c 	.word	0x0800158c
 800130c:	0800154c 	.word	0x0800154c

08001310 <_lseek_r>:
 8001310:	b538      	push	{r3, r4, r5, lr}
 8001312:	4d07      	ldr	r5, [pc, #28]	; (8001330 <_lseek_r+0x20>)
 8001314:	4604      	mov	r4, r0
 8001316:	4608      	mov	r0, r1
 8001318:	4611      	mov	r1, r2
 800131a:	2200      	movs	r2, #0
 800131c:	602a      	str	r2, [r5, #0]
 800131e:	461a      	mov	r2, r3
 8001320:	f7ff f892 	bl	8000448 <_lseek>
 8001324:	1c43      	adds	r3, r0, #1
 8001326:	d102      	bne.n	800132e <_lseek_r+0x1e>
 8001328:	682b      	ldr	r3, [r5, #0]
 800132a:	b103      	cbz	r3, 800132e <_lseek_r+0x1e>
 800132c:	6023      	str	r3, [r4, #0]
 800132e:	bd38      	pop	{r3, r4, r5, pc}
 8001330:	2000009c 	.word	0x2000009c

08001334 <__swhatbuf_r>:
 8001334:	b570      	push	{r4, r5, r6, lr}
 8001336:	460e      	mov	r6, r1
 8001338:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800133c:	2900      	cmp	r1, #0
 800133e:	b096      	sub	sp, #88	; 0x58
 8001340:	4614      	mov	r4, r2
 8001342:	461d      	mov	r5, r3
 8001344:	da07      	bge.n	8001356 <__swhatbuf_r+0x22>
 8001346:	2300      	movs	r3, #0
 8001348:	602b      	str	r3, [r5, #0]
 800134a:	89b3      	ldrh	r3, [r6, #12]
 800134c:	061a      	lsls	r2, r3, #24
 800134e:	d410      	bmi.n	8001372 <__swhatbuf_r+0x3e>
 8001350:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001354:	e00e      	b.n	8001374 <__swhatbuf_r+0x40>
 8001356:	466a      	mov	r2, sp
 8001358:	f000 f8be 	bl	80014d8 <_fstat_r>
 800135c:	2800      	cmp	r0, #0
 800135e:	dbf2      	blt.n	8001346 <__swhatbuf_r+0x12>
 8001360:	9a01      	ldr	r2, [sp, #4]
 8001362:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001366:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800136a:	425a      	negs	r2, r3
 800136c:	415a      	adcs	r2, r3
 800136e:	602a      	str	r2, [r5, #0]
 8001370:	e7ee      	b.n	8001350 <__swhatbuf_r+0x1c>
 8001372:	2340      	movs	r3, #64	; 0x40
 8001374:	2000      	movs	r0, #0
 8001376:	6023      	str	r3, [r4, #0]
 8001378:	b016      	add	sp, #88	; 0x58
 800137a:	bd70      	pop	{r4, r5, r6, pc}

0800137c <__smakebuf_r>:
 800137c:	898b      	ldrh	r3, [r1, #12]
 800137e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001380:	079d      	lsls	r5, r3, #30
 8001382:	4606      	mov	r6, r0
 8001384:	460c      	mov	r4, r1
 8001386:	d507      	bpl.n	8001398 <__smakebuf_r+0x1c>
 8001388:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800138c:	6023      	str	r3, [r4, #0]
 800138e:	6123      	str	r3, [r4, #16]
 8001390:	2301      	movs	r3, #1
 8001392:	6163      	str	r3, [r4, #20]
 8001394:	b002      	add	sp, #8
 8001396:	bd70      	pop	{r4, r5, r6, pc}
 8001398:	ab01      	add	r3, sp, #4
 800139a:	466a      	mov	r2, sp
 800139c:	f7ff ffca 	bl	8001334 <__swhatbuf_r>
 80013a0:	9900      	ldr	r1, [sp, #0]
 80013a2:	4605      	mov	r5, r0
 80013a4:	4630      	mov	r0, r6
 80013a6:	f7ff fa73 	bl	8000890 <_malloc_r>
 80013aa:	b948      	cbnz	r0, 80013c0 <__smakebuf_r+0x44>
 80013ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013b0:	059a      	lsls	r2, r3, #22
 80013b2:	d4ef      	bmi.n	8001394 <__smakebuf_r+0x18>
 80013b4:	f023 0303 	bic.w	r3, r3, #3
 80013b8:	f043 0302 	orr.w	r3, r3, #2
 80013bc:	81a3      	strh	r3, [r4, #12]
 80013be:	e7e3      	b.n	8001388 <__smakebuf_r+0xc>
 80013c0:	4b0d      	ldr	r3, [pc, #52]	; (80013f8 <__smakebuf_r+0x7c>)
 80013c2:	62b3      	str	r3, [r6, #40]	; 0x28
 80013c4:	89a3      	ldrh	r3, [r4, #12]
 80013c6:	6020      	str	r0, [r4, #0]
 80013c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013cc:	81a3      	strh	r3, [r4, #12]
 80013ce:	9b00      	ldr	r3, [sp, #0]
 80013d0:	6163      	str	r3, [r4, #20]
 80013d2:	9b01      	ldr	r3, [sp, #4]
 80013d4:	6120      	str	r0, [r4, #16]
 80013d6:	b15b      	cbz	r3, 80013f0 <__smakebuf_r+0x74>
 80013d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013dc:	4630      	mov	r0, r6
 80013de:	f000 f88d 	bl	80014fc <_isatty_r>
 80013e2:	b128      	cbz	r0, 80013f0 <__smakebuf_r+0x74>
 80013e4:	89a3      	ldrh	r3, [r4, #12]
 80013e6:	f023 0303 	bic.w	r3, r3, #3
 80013ea:	f043 0301 	orr.w	r3, r3, #1
 80013ee:	81a3      	strh	r3, [r4, #12]
 80013f0:	89a0      	ldrh	r0, [r4, #12]
 80013f2:	4305      	orrs	r5, r0
 80013f4:	81a5      	strh	r5, [r4, #12]
 80013f6:	e7cd      	b.n	8001394 <__smakebuf_r+0x18>
 80013f8:	080006e9 	.word	0x080006e9

080013fc <__malloc_lock>:
 80013fc:	4801      	ldr	r0, [pc, #4]	; (8001404 <__malloc_lock+0x8>)
 80013fe:	f7ff ba45 	b.w	800088c <__retarget_lock_acquire_recursive>
 8001402:	bf00      	nop
 8001404:	20000094 	.word	0x20000094

08001408 <__malloc_unlock>:
 8001408:	4801      	ldr	r0, [pc, #4]	; (8001410 <__malloc_unlock+0x8>)
 800140a:	f7ff ba40 	b.w	800088e <__retarget_lock_release_recursive>
 800140e:	bf00      	nop
 8001410:	20000094 	.word	0x20000094

08001414 <_free_r>:
 8001414:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001416:	2900      	cmp	r1, #0
 8001418:	d048      	beq.n	80014ac <_free_r+0x98>
 800141a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800141e:	9001      	str	r0, [sp, #4]
 8001420:	2b00      	cmp	r3, #0
 8001422:	f1a1 0404 	sub.w	r4, r1, #4
 8001426:	bfb8      	it	lt
 8001428:	18e4      	addlt	r4, r4, r3
 800142a:	f7ff ffe7 	bl	80013fc <__malloc_lock>
 800142e:	4a20      	ldr	r2, [pc, #128]	; (80014b0 <_free_r+0x9c>)
 8001430:	9801      	ldr	r0, [sp, #4]
 8001432:	6813      	ldr	r3, [r2, #0]
 8001434:	4615      	mov	r5, r2
 8001436:	b933      	cbnz	r3, 8001446 <_free_r+0x32>
 8001438:	6063      	str	r3, [r4, #4]
 800143a:	6014      	str	r4, [r2, #0]
 800143c:	b003      	add	sp, #12
 800143e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001442:	f7ff bfe1 	b.w	8001408 <__malloc_unlock>
 8001446:	42a3      	cmp	r3, r4
 8001448:	d90b      	bls.n	8001462 <_free_r+0x4e>
 800144a:	6821      	ldr	r1, [r4, #0]
 800144c:	1862      	adds	r2, r4, r1
 800144e:	4293      	cmp	r3, r2
 8001450:	bf04      	itt	eq
 8001452:	681a      	ldreq	r2, [r3, #0]
 8001454:	685b      	ldreq	r3, [r3, #4]
 8001456:	6063      	str	r3, [r4, #4]
 8001458:	bf04      	itt	eq
 800145a:	1852      	addeq	r2, r2, r1
 800145c:	6022      	streq	r2, [r4, #0]
 800145e:	602c      	str	r4, [r5, #0]
 8001460:	e7ec      	b.n	800143c <_free_r+0x28>
 8001462:	461a      	mov	r2, r3
 8001464:	685b      	ldr	r3, [r3, #4]
 8001466:	b10b      	cbz	r3, 800146c <_free_r+0x58>
 8001468:	42a3      	cmp	r3, r4
 800146a:	d9fa      	bls.n	8001462 <_free_r+0x4e>
 800146c:	6811      	ldr	r1, [r2, #0]
 800146e:	1855      	adds	r5, r2, r1
 8001470:	42a5      	cmp	r5, r4
 8001472:	d10b      	bne.n	800148c <_free_r+0x78>
 8001474:	6824      	ldr	r4, [r4, #0]
 8001476:	4421      	add	r1, r4
 8001478:	1854      	adds	r4, r2, r1
 800147a:	42a3      	cmp	r3, r4
 800147c:	6011      	str	r1, [r2, #0]
 800147e:	d1dd      	bne.n	800143c <_free_r+0x28>
 8001480:	681c      	ldr	r4, [r3, #0]
 8001482:	685b      	ldr	r3, [r3, #4]
 8001484:	6053      	str	r3, [r2, #4]
 8001486:	4421      	add	r1, r4
 8001488:	6011      	str	r1, [r2, #0]
 800148a:	e7d7      	b.n	800143c <_free_r+0x28>
 800148c:	d902      	bls.n	8001494 <_free_r+0x80>
 800148e:	230c      	movs	r3, #12
 8001490:	6003      	str	r3, [r0, #0]
 8001492:	e7d3      	b.n	800143c <_free_r+0x28>
 8001494:	6825      	ldr	r5, [r4, #0]
 8001496:	1961      	adds	r1, r4, r5
 8001498:	428b      	cmp	r3, r1
 800149a:	bf04      	itt	eq
 800149c:	6819      	ldreq	r1, [r3, #0]
 800149e:	685b      	ldreq	r3, [r3, #4]
 80014a0:	6063      	str	r3, [r4, #4]
 80014a2:	bf04      	itt	eq
 80014a4:	1949      	addeq	r1, r1, r5
 80014a6:	6021      	streq	r1, [r4, #0]
 80014a8:	6054      	str	r4, [r2, #4]
 80014aa:	e7c7      	b.n	800143c <_free_r+0x28>
 80014ac:	b003      	add	sp, #12
 80014ae:	bd30      	pop	{r4, r5, pc}
 80014b0:	20000084 	.word	0x20000084

080014b4 <_read_r>:
 80014b4:	b538      	push	{r3, r4, r5, lr}
 80014b6:	4d07      	ldr	r5, [pc, #28]	; (80014d4 <_read_r+0x20>)
 80014b8:	4604      	mov	r4, r0
 80014ba:	4608      	mov	r0, r1
 80014bc:	4611      	mov	r1, r2
 80014be:	2200      	movs	r2, #0
 80014c0:	602a      	str	r2, [r5, #0]
 80014c2:	461a      	mov	r2, r3
 80014c4:	f7fe ff60 	bl	8000388 <_read>
 80014c8:	1c43      	adds	r3, r0, #1
 80014ca:	d102      	bne.n	80014d2 <_read_r+0x1e>
 80014cc:	682b      	ldr	r3, [r5, #0]
 80014ce:	b103      	cbz	r3, 80014d2 <_read_r+0x1e>
 80014d0:	6023      	str	r3, [r4, #0]
 80014d2:	bd38      	pop	{r3, r4, r5, pc}
 80014d4:	2000009c 	.word	0x2000009c

080014d8 <_fstat_r>:
 80014d8:	b538      	push	{r3, r4, r5, lr}
 80014da:	4d07      	ldr	r5, [pc, #28]	; (80014f8 <_fstat_r+0x20>)
 80014dc:	2300      	movs	r3, #0
 80014de:	4604      	mov	r4, r0
 80014e0:	4608      	mov	r0, r1
 80014e2:	4611      	mov	r1, r2
 80014e4:	602b      	str	r3, [r5, #0]
 80014e6:	f7fe ff94 	bl	8000412 <_fstat>
 80014ea:	1c43      	adds	r3, r0, #1
 80014ec:	d102      	bne.n	80014f4 <_fstat_r+0x1c>
 80014ee:	682b      	ldr	r3, [r5, #0]
 80014f0:	b103      	cbz	r3, 80014f4 <_fstat_r+0x1c>
 80014f2:	6023      	str	r3, [r4, #0]
 80014f4:	bd38      	pop	{r3, r4, r5, pc}
 80014f6:	bf00      	nop
 80014f8:	2000009c 	.word	0x2000009c

080014fc <_isatty_r>:
 80014fc:	b538      	push	{r3, r4, r5, lr}
 80014fe:	4d06      	ldr	r5, [pc, #24]	; (8001518 <_isatty_r+0x1c>)
 8001500:	2300      	movs	r3, #0
 8001502:	4604      	mov	r4, r0
 8001504:	4608      	mov	r0, r1
 8001506:	602b      	str	r3, [r5, #0]
 8001508:	f7fe ff93 	bl	8000432 <_isatty>
 800150c:	1c43      	adds	r3, r0, #1
 800150e:	d102      	bne.n	8001516 <_isatty_r+0x1a>
 8001510:	682b      	ldr	r3, [r5, #0]
 8001512:	b103      	cbz	r3, 8001516 <_isatty_r+0x1a>
 8001514:	6023      	str	r3, [r4, #0]
 8001516:	bd38      	pop	{r3, r4, r5, pc}
 8001518:	2000009c 	.word	0x2000009c

0800151c <_init>:
 800151c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800151e:	bf00      	nop
 8001520:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001522:	bc08      	pop	{r3}
 8001524:	469e      	mov	lr, r3
 8001526:	4770      	bx	lr

08001528 <_fini>:
 8001528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800152a:	bf00      	nop
 800152c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800152e:	bc08      	pop	{r3}
 8001530:	469e      	mov	lr, r3
 8001532:	4770      	bx	lr
